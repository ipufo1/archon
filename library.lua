local base64decode = (base64 and base64.decode) or base64_decode or (crypt and crypt.base64 and crypt.base64.decode);

local TextSettings = {
    Font = '';
    --TitleFont = '';
    Size = 12;
};

pcall(function()
    delfile('ArchonFont.ttf');
    delfile('ArchonFont.json');
    delfile('ArchonImage.png');
end);

writefile('ArchonFont.ttf', base64decode(TextSettings.Font));
writefile('ArchonFont.json', game:GetService("HttpService"):JSONEncode({
    name = 'ArchonFont',
    faces = {{
        name = 'Regular',
        weight = 400,
        style = 'normal',
        assetId = getcustomasset('ArchonFont.ttf')
    }}
}));

local Font = Font.new(getcustomasset('ArchonFont.json'), Enum.FontWeight.Regular);

local ArchonImage = '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q/IiIAIi4CwBpR45AhL0yLFWTiIgAiIgAiLgGAEJumNolbAIiIAIiICzBJR6KAEJeigNhUVABERABEQgTglI0OO04VRsERABERABZwnEW+oS9HhrMZVXBERABERABMogIEEvA4qOzO/wAAAEaElEQVSiREAEREAERMBZAvanLkG3n6lSFAEREAEREIGIE5CgRxy5MhQBERABERAB+wmECrr9qStFERABERABERCBiBCQoEcEszIRAREQAREQAWcJRE7Qna2HUhcBERABERCBpCYgQU/q5lflRUAEREAEEoVAogh6orSH6iECIiACIiACVSIgQa8SNl0kAiIgAiIgArFFQIIeTnvoHBEQAREQARGIcQIS9BhvIBVPBERABERABMIhIEEPh5Kz5yh1ERABERABEag2AQl6tREqAREQAREQARGIPgEJevTbwNkSKHUREAEREIGkICBBT4pmViVFQAREQAQSnYAEPdFb2Nn6KXUREAEREIEYISBBj5GGUDFEQAREQAREoDoEJOjVoadrnSWg1EVABERABMImIEEPG5VOFAEREAEREIHYJSBBj922UcmcJaDURUAERCChCEjQE6o5VRkREAEREIFkJSBBT9aWV72dJaDURUAERCDCBCToEQau7ERABERABETACQISdCeoKk0RcJaAUhcBERCBnxCQoP8EiSJEQAREQAREIP4ISNDjr81UYhFwloBSFwERiEsCEvS4bDYVWgREQAREQASOJiBBP5qH9kRABJwloNRFQAQcIiBBdwiskhUBERABERCBSBKQoEeStvISARFwloBSF4EkJiBBT+LGV9VFQAREQAQSh4AEPXHaUjURARFwloBSF4GYJiBBj+nmUeFEQAREQAREIDwCEvTwOOksERABEXCWgFIXgWoSkKBXE6AuFwEREAEREIFYICBBj4VWUBlEQAREwFkCSj0JCEjQk6CRVUUREAEREIHEJyBBT/w2Vg1FQAREwFkCSj0mCEjQY6IZVAgREAEREAERqB4BCXr1+OlqERABERABZwko9TAJSNDDBKXTREAEREAERCCWCUjQY7l1VDYREAEREAFnCSRQ6hL0BGpMVUUEREAERCB5CUjQk7ftVXMREAEREAFnCUQ0dQl6RHErMxEQAREQARFwhoAE3RmuSlUEREAEREAEnCVwTOoS9GOAaFcEREAEREAE4pGABD0eW01lFgEREAEREIFjCNgs6Mekrl0REAEREAEREIGIEJCgRwSzMhEBERABERABZwnElaA7i0Kpi4AIiIAIiED8EpCgx2/bqeQiIAIiIAIiECQgQQ+iUEAEREAEREAE4peABD1+204lFwEREAEREIEgAQl6EIWzAaUuAiIgAiIgAk4SkKA7SVdpi4AIiIAIiECECEjQIwTa2WyUugiIgAiIQLITkKAn+x2g+ouACIiACCQEAQl6QjSjs5VQ6iIgAiIgArFPQIIe+22kEoqACIiACIhApQQk6JUi0gnOElDqIiACIiACdhCQoNtBUWmIgAiIgAiIQJQJSNCj3ADK3lkCSl0EREAEkoWABD1ZWlr1FAEREAERSGgCEvSEbl5VzlkCSl0EREAEYoeABD122kIlEQEREAEREIEqE5CgVxmdLhQBZwkodREQARE4HgL/DwAA///9qQEOAAAABklEQVQDAEFWQ+Zvxl2/AAAAAElFTkSuQmCC'
writefile('ArchonImage.png', base64decode(ArchonImage));

local InputService = game:GetService('UserInputService');
local TextService = game:GetService('TextService');
local CoreGui = game:GetService('CoreGui')
local Teams = game:GetService('Teams');
local Players = game:GetService('Players');
local RunService = game:GetService('RunService')
local TweenService = game:GetService('TweenService');
local RenderStepped = RunService.RenderStepped;
local LocalPlayer = Players.LocalPlayer;
local Mouse = LocalPlayer:GetMouse();

local ProtectGui = protectgui or (syn and syn.protect_gui) or (function() end);

local ScreenGui = Instance.new('ScreenGui');
ProtectGui(ScreenGui);

ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Global;
ScreenGui.Parent = CoreGui;

local Toggles = {};
local Options = {};

getgenv().Toggles = Toggles;
getgenv().Options = Options;

local Library = {
    Registry = {};
    RegistryMap = {};

    HudRegistry = {};

    FontColor = Color3.fromRGB(255, 255, 255);
    MainColor = Color3.fromRGB(28, 28, 28);
    BackgroundColor = Color3.fromRGB(20, 20, 20);
    AccentColor = Color3.fromRGB(196, 246, 255);
    OutlineColor = Color3.fromRGB(50, 50, 50);
    RiskColor = Color3.fromRGB(255, 165, 0),

    Black = Color3.new(0, 0, 0);
    --Font = Enum.Font.Code,

    OpenedFrames = {};
    DependencyBoxes = {};

    Signals = {};
    ScreenGui = ScreenGui;
};

local RainbowStep = 0
local Hue = 0

table.insert(Library.Signals, RenderStepped:Connect(function(Delta)
    RainbowStep = RainbowStep + Delta

    if RainbowStep >= (1 / 60) then
        RainbowStep = 0

        Hue = Hue + (1 / 400);

        if Hue > 1 then
            Hue = 0;
        end;

        Library.CurrentRainbowHue = Hue;
        Library.CurrentRainbowColor = Color3.fromHSV(Hue, 0.8, 1);
    end
end))

local function GetPlayersString()
    local PlayerList = Players:GetPlayers();

    for i = 1, #PlayerList do
        PlayerList[i] = PlayerList[i].Name;
    end;

    table.sort(PlayerList, function(str1, str2) return str1 < str2 end);

    return PlayerList;
end;

local function GetTeamsString()
    local TeamList = Teams:GetTeams();

    for i = 1, #TeamList do
        TeamList[i] = TeamList[i].Name;
    end;

    table.sort(TeamList, function(str1, str2) return str1 < str2 end);

    return TeamList;
end;

function Library:SafeCallback(f, ...)
    if (not f) then
        return;
    end;

    if not Library.NotifyOnError then
        return f(...);
    end;

    local success, event = pcall(f, ...);

    if not success then
        local _, i = event:find(":%d+: ");

        if not i then
            return Library:Notify(event);
        end;

        return Library:Notify(event:sub(i + 1), 3);
    end;
end;

function Library:AttemptSave()
    if Library.SaveManager then
        Library.SaveManager:Save();
    end;
end;

function Library:Create(Class, Properties)
    local _Instance = Class;

    if type(Class) == 'string' then
        _Instance = Instance.new(Class);
    end;

    for Property, Value in next, Properties do
        _Instance[Property] = Value;
    end;

    return _Instance;
end;

function Library:ApplyTextStroke(Inst)
    Inst.TextStrokeTransparency = 1;

    Library:Create('UIStroke', {
        Color = Color3.new(0, 0, 0);
        Thickness = 1;
        LineJoinMode = Enum.LineJoinMode.Miter;
        Parent = Inst;
    });
end;

function Library:CreateLabel(Properties, IsHud)
    local _Instance = Library:Create('TextLabel', {
        BackgroundTransparency = 1;
        FontFace = Font;
        TextColor3 = Library.FontColor;
        TextSize = TextSettings.Size;
        TextStrokeTransparency = 0;
    });

    Library:ApplyTextStroke(_Instance);

    Library:AddToRegistry(_Instance, {
        TextColor3 = 'FontColor';
    }, IsHud);

    return Library:Create(_Instance, Properties);
end;

function Library:MakeDraggable(Instance, Cutoff)
    Instance.Active = true;

    Instance.InputBegan:Connect(function(Input)
        if Input.UserInputType == Enum.UserInputType.MouseButton1 then
            local ObjPos = Vector2.new(
                Mouse.X - Instance.AbsolutePosition.X,
                Mouse.Y - Instance.AbsolutePosition.Y
            );

            if ObjPos.Y > (Cutoff or 40) then
                return;
            end;

            while InputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) do
                Instance.Position = UDim2.new(
                    0,
                    Mouse.X - ObjPos.X + (Instance.Size.X.Offset * Instance.AnchorPoint.X),
                    0,
                    Mouse.Y - ObjPos.Y + (Instance.Size.Y.Offset * Instance.AnchorPoint.Y)
                );

                RenderStepped:Wait();
            end;
        end;
    end)
end;

function Library:AddToolTip(InfoStr, HoverInstance)
    local X, Y = Library:GetTextBounds(InfoStr, Font, 14);
    local Tooltip = Library:Create('Frame', {
        BackgroundColor3 = Library.MainColor,
        BorderColor3 = Library.OutlineColor,

        Size = UDim2.fromOffset(X + 5, Y + 4),
        ZIndex = 100,
        Parent = Library.ScreenGui,

        Visible = false,
    })

    local Label = Library:CreateLabel({
        Position = UDim2.fromOffset(3, 1),
        Size = UDim2.fromOffset(X, Y);
        TextSize = 12;
        Text = InfoStr,
        TextColor3 = Library.FontColor,
        TextXAlignment = Enum.TextXAlignment.Left;
        ZIndex = Tooltip.ZIndex + 1,

        Parent = Tooltip;
    });

    Library:AddToRegistry(Tooltip, {
        BackgroundColor3 = 'MainColor';
        BorderColor3 = 'OutlineColor';
    });

    Library:AddToRegistry(Label, {
        TextColor3 = 'FontColor',
    });

    local IsHovering = false

    HoverInstance.MouseEnter:Connect(function()
        if Library:MouseIsOverOpenedFrame() then
            return
        end

        IsHovering = true

        Tooltip.Position = UDim2.fromOffset(Mouse.X + 15, Mouse.Y + 12)
        Tooltip.Visible = true

        while IsHovering do
            RunService.Heartbeat:Wait()
            Tooltip.Position = UDim2.fromOffset(Mouse.X + 15, Mouse.Y + 12)
        end
    end)

    HoverInstance.MouseLeave:Connect(function()
        IsHovering = false
        Tooltip.Visible = false
    end)
end

function Library:OnHighlight(HighlightInstance, Instance, Properties, PropertiesDefault)
    HighlightInstance.MouseEnter:Connect(function()
        local Reg = Library.RegistryMap[Instance];

        for Property, ColorIdx in next, Properties do
            Instance[Property] = Library[ColorIdx] or ColorIdx;

            if Reg and Reg.Properties[Property] then
                Reg.Properties[Property] = ColorIdx;
            end;
        end;
    end)

    HighlightInstance.MouseLeave:Connect(function()
        local Reg = Library.RegistryMap[Instance];

        for Property, ColorIdx in next, PropertiesDefault do
            Instance[Property] = Library[ColorIdx] or ColorIdx;

            if Reg and Reg.Properties[Property] then
                Reg.Properties[Property] = ColorIdx;
            end;
        end;
    end)
end;

function Library:MouseIsOverOpenedFrame()
    for Frame, _ in next, Library.OpenedFrames do
        local AbsPos, AbsSize = Frame.AbsolutePosition, Frame.AbsoluteSize;

        if Mouse.X >= AbsPos.X and Mouse.X <= AbsPos.X + AbsSize.X
            and Mouse.Y >= AbsPos.Y and Mouse.Y <= AbsPos.Y + AbsSize.Y then

            return true;
        end;
    end;
end;

function Library:IsMouseOverFrame(Frame)
    local AbsPos, AbsSize = Frame.AbsolutePosition, Frame.AbsoluteSize;

    if Mouse.X >= AbsPos.X and Mouse.X <= AbsPos.X + AbsSize.X
        and Mouse.Y >= AbsPos.Y and Mouse.Y <= AbsPos.Y + AbsSize.Y then

        return true;
    end;
end;

function Library:UpdateDependencyBoxes()
    for _, Depbox in next, Library.DependencyBoxes do
        Depbox:Update();
    end;
end;

function Library:MapValue(Value, MinA, MaxA, MinB, MaxB)
    return (1 - ((Value - MinA) / (MaxA - MinA))) * MinB + ((Value - MinA) / (MaxA - MinA)) * MaxB;
end;

function Library:GetTextBounds(Text, Font, Size, Resolution)
    local Parameters = Instance.new('GetTextBoundsParams');
    Parameters.Size = TextSettings.Size;
    Parameters.Font = Font;
    Parameters.Text = Text;

    local Bounds = TextService:GetTextBoundsAsync(Parameters);
    return Bounds.X, Bounds.Y;
end;

function Library:GetDarkerColor(Color)
    local H, S, V = Color3.toHSV(Color);
    return Color3.fromHSV(H, S, V / 1.5);
end;
Library.AccentColorDark = Library:GetDarkerColor(Library.AccentColor);

function Library:AddToRegistry(Instance, Properties, IsHud)
    local Idx = #Library.Registry + 1;
    local Data = {
        Instance = Instance;
        Properties = Properties;
        Idx = Idx;
    };

    table.insert(Library.Registry, Data);
    Library.RegistryMap[Instance] = Data;

    if IsHud then
        table.insert(Library.HudRegistry, Data);
    end;
end;

function Library:RemoveFromRegistry(Instance)
    local Data = Library.RegistryMap[Instance];

    if Data then
        for Idx = #Library.Registry, 1, -1 do
            if Library.Registry[Idx] == Data then
                table.remove(Library.Registry, Idx);
            end;
        end;

        for Idx = #Library.HudRegistry, 1, -1 do
            if Library.HudRegistry[Idx] == Data then
                table.remove(Library.HudRegistry, Idx);
            end;
        end;

        Library.RegistryMap[Instance] = nil;
    end;
end;

function Library:UpdateColorsUsingRegistry()
    -- TODO: Could have an 'active' list of objects
    -- where the active list only contains Visible objects.

    -- IMPL: Could setup .Changed events on the AddToRegistry function
    -- that listens for the 'Visible' propert being changed.
    -- Visible: true => Add to active list, and call UpdateColors function
    -- Visible: false => Remove from active list.

    -- The above would be especially efficient for a rainbow menu color or live color-changing.

    for Idx, Object in next, Library.Registry do
        for Property, ColorIdx in next, Object.Properties do
            if type(ColorIdx) == 'string' then
                Object.Instance[Property] = Library[ColorIdx];
            elseif type(ColorIdx) == 'function' then
                Object.Instance[Property] = ColorIdx()
            end
        end;
    end;
end;

function Library:GiveSignal(Signal)
    -- Only used for signals not attached to library instances, as those should be cleaned up on object destruction by Roblox
    table.insert(Library.Signals, Signal)
end

function Library:Unload()
    -- Unload all of the signals
    for Idx = #Library.Signals, 1, -1 do
        local Connection = table.remove(Library.Signals, Idx)
        Connection:Disconnect()
    end

     -- Call our unload callback, maybe to undo some hooks etc
    if Library.OnUnload then
        Library.OnUnload()
    end

    ScreenGui:Destroy()
end

function Library:OnUnload(Callback)
    Library.OnUnload = Callback
end

Library:GiveSignal(ScreenGui.DescendantRemoving:Connect(function(Instance)
    if Library.RegistryMap[Instance] then
        Library:RemoveFromRegistry(Instance);
    end;
end))

local BaseAddons = {};

do
    local Funcs = {};

    function Funcs:AddColorPicker(Idx, Info)
        local ToggleLabel = self.TextLabel;
        -- local Container = self.Container;

        assert(Info.Default, 'AddColorPicker: Missing default value.');

        local ColorPicker = {
            Value = Info.Default;
            Transparency = Info.Transparency or 0;
            Type = 'ColorPicker';
            Title = type(Info.Title) == 'string' and Info.Title or 'Color picker',
            Callback = Info.Callback or function(Color) end;
        };

        function ColorPicker:SetHSVFromRGB(Color)
            local H, S, V = Color3.toHSV(Color);

            ColorPicker.Hue = H;
            ColorPicker.Sat = S;
            ColorPicker.Vib = V;
        end;

        ColorPicker:SetHSVFromRGB(ColorPicker.Value);

        local DisplayFrame = Library:Create('Frame', {
            BackgroundColor3 = ColorPicker.Value;
            BorderColor3 = Library:GetDarkerColor(ColorPicker.Value);
            BorderMode = Enum.BorderMode.Inset;
            Size = UDim2.new(0, 28, 0, 14);
            ZIndex = 6;
            Parent = ToggleLabel;
        });

        -- Transparency image taken from https://github.com/matas3535/SplixPrivateDrawingLibrary/blob/main/Library.lua cus i'm lazy
        local CheckerFrame = Library:Create('ImageLabel', {
            BorderSizePixel = 0;
            Size = UDim2.new(0, 27, 0, 13);
            ZIndex = 5;
            Image = 'http://www.roblox.com/asset/?id=12977615774';
            Visible = not not Info.Transparency;
            Parent = DisplayFrame;
        });

        -- 1/16/23
        -- Rewrote this to be placed inside the Library ScreenGui
        -- There was some issue which caused RelativeOffset to be way off
        -- Thus the color picker would never show

        local PickerFrameOuter = Library:Create('Frame', {
            Name = 'Color';
            BackgroundColor3 = Color3.new(1, 1, 1);
            BorderColor3 = Color3.new(0, 0, 0);
            Position = UDim2.fromOffset(DisplayFrame.AbsolutePosition.X, DisplayFrame.AbsolutePosition.Y + 18),
            Size = UDim2.fromOffset(230, Info.Transparency and 271 or 253);
            Visible = false;
            ZIndex = 15;
            Parent = ScreenGui,
        });

        DisplayFrame:GetPropertyChangedSignal('AbsolutePosition'):Connect(function()
            PickerFrameOuter.Position = UDim2.fromOffset(DisplayFrame.AbsolutePosition.X, DisplayFrame.AbsolutePosition.Y + 18);
        end)

        local PickerFrameInner = Library:Create('Frame', {
            BackgroundColor3 = Library.BackgroundColor;
            BorderColor3 = Library.OutlineColor;
            BorderMode = Enum.BorderMode.Inset;
            Size = UDim2.new(1, 0, 1, 0);
            ZIndex = 16;
            Parent = PickerFrameOuter;
        });

        local Highlight = Library:Create('Frame', {
            BackgroundColor3 = Library.AccentColor;
            BorderSizePixel = 0;
            Size = UDim2.new(1, 0, 0, 2);
            ZIndex = 17;
            Parent = PickerFrameInner;
        });

        local SatVibMapOuter = Library:Create('Frame', {
            BorderColor3 = Color3.new(0, 0, 0);
            Position = UDim2.new(0, 4, 0, 25);
            Size = UDim2.new(0, 200, 0, 200);
            ZIndex = 17;
            Parent = PickerFrameInner;
        });

        local SatVibMapInner = Library:Create('Frame', {
            BackgroundColor3 = Library.BackgroundColor;
            BorderColor3 = Library.OutlineColor;
            BorderMode = Enum.BorderMode.Inset;
            Size = UDim2.new(1, 0, 1, 0);
            ZIndex = 18;
            Parent = SatVibMapOuter;
        });

        local SatVibMap = Library:Create('ImageLabel', {
            BorderSizePixel = 0;
            Size = UDim2.new(1, 0, 1, 0);
            ZIndex = 18;
            Image = 'rbxassetid://4155801252';
            Parent = SatVibMapInner;
        });

        local CursorOuter = Library:Create('ImageLabel', {
            AnchorPoint = Vector2.new(0.5, 0.5);
            Size = UDim2.new(0, 6, 0, 6);
            BackgroundTransparency = 1;
            Image = 'http://www.roblox.com/asset/?id=9619665977';
            ImageColor3 = Color3.new(0, 0, 0);
            ZIndex = 19;
            Parent = SatVibMap;
        });

        local CursorInner = Library:Create('ImageLabel', {
            Size = UDim2.new(0, CursorOuter.Size.X.Offset - 2, 0, CursorOuter.Size.Y.Offset - 2);
            Position = UDim2.new(0, 1, 0, 1);
            BackgroundTransparency = 1;
            Image = 'http://www.roblox.com/asset/?id=9619665977';
            ZIndex = 20;
            Parent = CursorOuter;
        })

        local HueSelectorOuter = Library:Create('Frame', {
            BorderColor3 = Color3.new(0, 0, 0);
            Position = UDim2.new(0, 208, 0, 25);
            Size = UDim2.new(0, 15, 0, 200);
            ZIndex = 17;
            Parent = PickerFrameInner;
        });

        local HueSelectorInner = Library:Create('Frame', {
            BackgroundColor3 = Color3.new(1, 1, 1);
            BorderSizePixel = 0;
            Size = UDim2.new(1, 0, 1, 0);
            ZIndex = 18;
            Parent = HueSelectorOuter;
        });

        local HueCursor = Library:Create('Frame', {
            BackgroundColor3 = Color3.new(1, 1, 1);
            AnchorPoint = Vector2.new(0, 0.5);
            BorderColor3 = Color3.new(0, 0, 0);
            Size = UDim2.new(1, 0, 0, 1);
            ZIndex = 18;
            Parent = HueSelectorInner;
        });

        local HueBoxOuter = Library:Create('Frame', {
            BorderColor3 = Color3.new(0, 0, 0);
            Position = UDim2.fromOffset(4, 228),
            Size = UDim2.new(0.5, -6, 0, 20),
            ZIndex = 18,
            Parent = PickerFrameInner;
        });

        local HueBoxInner = Library:Create('Frame', {
            BackgroundColor3 = Library.MainColor;
            BorderColor3 = Library.OutlineColor;
            BorderMode = Enum.BorderMode.Inset;
            Size = UDim2.new(1, 0, 1, 0);
            ZIndex = 18,
            Parent = HueBoxOuter;
        });

        Library:Create('UIGradient', {
            Color = ColorSequence.new({
                ColorSequenceKeypoint.new(0, Color3.new(1, 1, 1)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(212, 212, 212))
            });
            Rotation = 90;
            Parent = HueBoxInner;
        });

        local HueBox = Library:Create('TextBox', {
            BackgroundTransparency = 1;
            Position = UDim2.new(0, 5, 0, 0);
            Size = UDim2.new(1, -5, 1, 0);
            FontFace = Font;
            PlaceholderColor3 = Color3.fromRGB(190, 190, 190);
            PlaceholderText = 'Hex color',
            Text = '#FFFFFF',
            TextColor3 = Library.FontColor;
            TextSize = 12;
            TextStrokeTransparency = 0;
            TextXAlignment = Enum.TextXAlignment.Left;
            ZIndex = 20,
            Parent = HueBoxInner;
        });

        Library:ApplyTextStroke(HueBox);

        local RgbBoxBase = Library:Create(HueBoxOuter:Clone(), {
            Position = UDim2.new(0.5, 2, 0, 228),
            Size = UDim2.new(0.5, -6, 0, 20),
            Parent = PickerFrameInner
        });

        local RgbBox = Library:Create(RgbBoxBase.Frame:FindFirstChild('TextBox'), {
            Text = '255, 255, 255',
            PlaceholderText = 'RGB color',
            TextColor3 = Library.FontColor
        });

        local TransparencyBoxOuter, TransparencyBoxInner, TransparencyCursor;

        if Info.Transparency then
            TransparencyBoxOuter = Library:Create('Frame', {
                BorderColor3 = Color3.new(0, 0, 0);
                Position = UDim2.fromOffset(4, 251);
                Size = UDim2.new(1, -8, 0, 15);
                ZIndex = 19;
                Parent = PickerFrameInner;
            });

            TransparencyBoxInner = Library:Create('Frame', {
                BackgroundColor3 = ColorPicker.Value;
                BorderColor3 = Library.OutlineColor;
                BorderMode = Enum.BorderMode.Inset;
                Size = UDim2.new(1, 0, 1, 0);
                ZIndex = 19;
                Parent = TransparencyBoxOuter;
            });

            Library:AddToRegistry(TransparencyBoxInner, { BorderColor3 = 'OutlineColor' });

            Library:Create('ImageLabel', {
                BackgroundTransparency = 1;
                Size = UDim2.new(1, 0, 1, 0);
                Image = 'http://www.roblox.com/asset/?id=12978095818';
                ZIndex = 20;
                Parent = TransparencyBoxInner;
            });

            TransparencyCursor = Library:Create('Frame', {
                BackgroundColor3 = Color3.new(1, 1, 1);
                AnchorPoint = Vector2.new(0.5, 0);
                BorderColor3 = Color3.new(0, 0, 0);
                Size = UDim2.new(0, 1, 1, 0);
                ZIndex = 21;
                Parent = TransparencyBoxInner;
            });
        end;

        local DisplayLabel = Library:CreateLabel({
            Size = UDim2.new(1, 0, 0, 14);
            Position = UDim2.fromOffset(5, 5);
            TextXAlignment = Enum.TextXAlignment.Left;
            TextSize = 12;
            Text = ColorPicker.Title,--Info.Default;
            TextWrapped = false;
            ZIndex = 16;
            Parent = PickerFrameInner;
        });


        local ContextMenu = {}
        do
            ContextMenu.Options = {}
            ContextMenu.Container = Library:Create('Frame', {
                BorderColor3 = Color3.new(),
                ZIndex = 14,

                Visible = false,
                Parent = ScreenGui
            })

            ContextMenu.Inner = Library:Create('Frame', {
                BackgroundColor3 = Library.BackgroundColor;
                BorderColor3 = Library.OutlineColor;
                BorderMode = Enum.BorderMode.Inset;
                Size = UDim2.fromScale(1, 1);
                ZIndex = 15;
                Parent = ContextMenu.Container;
            });

            Library:Create('UIListLayout', {
                Name = 'Layout',
                FillDirection = Enum.FillDirection.Vertical;
                SortOrder = Enum.SortOrder.LayoutOrder;
                Parent = ContextMenu.Inner;
            });

            Library:Create('UIPadding', {
                Name = 'Padding',
                PaddingLeft = UDim.new(0, 4),
                Parent = ContextMenu.Inner,
            });

            local function updateMenuPosition()
                ContextMenu.Container.Position = UDim2.fromOffset(
                    (DisplayFrame.AbsolutePosition.X + DisplayFrame.AbsoluteSize.X) + 4,
                    DisplayFrame.AbsolutePosition.Y + 1
                )
            end

            local function updateMenuSize()
                local menuWidth = 60
                for i, label in next, ContextMenu.Inner:GetChildren() do
                    if label:IsA('TextLabel') then
                        menuWidth = math.max(menuWidth, label.TextBounds.X)
                    end
                end

                ContextMenu.Container.Size = UDim2.fromOffset(
                    menuWidth + 8,
                    ContextMenu.Inner.Layout.AbsoluteContentSize.Y + 4
                )
            end

            DisplayFrame:GetPropertyChangedSignal('AbsolutePosition'):Connect(updateMenuPosition)
            ContextMenu.Inner.Layout:GetPropertyChangedSignal('AbsoluteContentSize'):Connect(updateMenuSize)

            task.spawn(updateMenuPosition)
            task.spawn(updateMenuSize)

            Library:AddToRegistry(ContextMenu.Inner, {
                BackgroundColor3 = 'BackgroundColor';
                BorderColor3 = 'OutlineColor';
            });

            function ContextMenu:Show()
                self.Container.Visible = true
            end

            function ContextMenu:Hide()
                self.Container.Visible = false
            end

            function ContextMenu:AddOption(Str, Callback)
                if type(Callback) ~= 'function' then
                    Callback = function() end
                end

                local Button = Library:CreateLabel({
                    Active = false;
                    Size = UDim2.new(1, 0, 0, 15);
                    TextSize = 12;
                    Text = Str;
                    ZIndex = 16;
                    Parent = self.Inner;
                    TextXAlignment = Enum.TextXAlignment.Left,
                });

                Library:OnHighlight(Button, Button,
                    { TextColor3 = 'AccentColor' },
                    { TextColor3 = 'FontColor' }
                );

                Button.InputBegan:Connect(function(Input)
                    if Input.UserInputType ~= Enum.UserInputType.MouseButton1 then
                        return
                    end

                    Callback()
                end)
            end

            ContextMenu:AddOption('Copy color', function()
                Library.ColorClipboard = ColorPicker.Value
                Library:Notify('Copied color!', 2)
            end)

            ContextMenu:AddOption('Paste color', function()
                if not Library.ColorClipboard then
                    return Library:Notify('You have not copied a color!', 2)
                end
                ColorPicker:SetValueRGB(Library.ColorClipboard)
            end)


            ContextMenu:AddOption('Copy HEX', function()
                pcall(setclipboard, ColorPicker.Value:ToHex())
                Library:Notify('Copied hex code to clipboard!', 2)
            end)

            ContextMenu:AddOption('Copy RGB', function()
                pcall(setclipboard, table.concat({ math.floor(ColorPicker.Value.R * 255), math.floor(ColorPicker.Value.G * 255), math.floor(ColorPicker.Value.B * 255) }, ', '))
                Library:Notify('Copied RGB values to clipboard!', 2)
            end)

        end

        Library:AddToRegistry(PickerFrameInner, { BackgroundColor3 = 'BackgroundColor'; BorderColor3 = 'OutlineColor'; });
        Library:AddToRegistry(Highlight, { BackgroundColor3 = 'AccentColor'; });
        Library:AddToRegistry(SatVibMapInner, { BackgroundColor3 = 'BackgroundColor'; BorderColor3 = 'OutlineColor'; });

        Library:AddToRegistry(HueBoxInner, { BackgroundColor3 = 'MainColor'; BorderColor3 = 'OutlineColor'; });
        Library:AddToRegistry(RgbBoxBase.Frame, { BackgroundColor3 = 'MainColor'; BorderColor3 = 'OutlineColor'; });
        Library:AddToRegistry(RgbBox, { TextColor3 = 'FontColor', });
        Library:AddToRegistry(HueBox, { TextColor3 = 'FontColor', });

        local SequenceTable = {};

        for Hue = 0, 1, 0.1 do
            table.insert(SequenceTable, ColorSequenceKeypoint.new(Hue, Color3.fromHSV(Hue, 1, 1)));
        end;

        local HueSelectorGradient = Library:Create('UIGradient', {
            Color = ColorSequence.new(SequenceTable);
            Rotation = 90;
            Parent = HueSelectorInner;
        });

        HueBox.FocusLost:Connect(function(enter)
            if enter then
                local success, result = pcall(Color3.fromHex, HueBox.Text)
                if success and typeof(result) == 'Color3' then
                    ColorPicker.Hue, ColorPicker.Sat, ColorPicker.Vib = Color3.toHSV(result)
                end
            end

            ColorPicker:Display()
        end)

        RgbBox.FocusLost:Connect(function(enter)
            if enter then
                local r, g, b = RgbBox.Text:match('(%d+),%s*(%d+),%s*(%d+)')
                if r and g and b then
                    ColorPicker.Hue, ColorPicker.Sat, ColorPicker.Vib = Color3.toHSV(Color3.fromRGB(r, g, b))
                end
            end

            ColorPicker:Display()
        end)

        function ColorPicker:Display()
            ColorPicker.Value = Color3.fromHSV(ColorPicker.Hue, ColorPicker.Sat, ColorPicker.Vib);
            SatVibMap.BackgroundColor3 = Color3.fromHSV(ColorPicker.Hue, 1, 1);

            Library:Create(DisplayFrame, {
                BackgroundColor3 = ColorPicker.Value;
                BackgroundTransparency = ColorPicker.Transparency;
                BorderColor3 = Library:GetDarkerColor(ColorPicker.Value);
            });

            if TransparencyBoxInner then
                TransparencyBoxInner.BackgroundColor3 = ColorPicker.Value;
                TransparencyCursor.Position = UDim2.new(1 - ColorPicker.Transparency, 0, 0, 0);
            end;

            CursorOuter.Position = UDim2.new(ColorPicker.Sat, 0, 1 - ColorPicker.Vib, 0);
            HueCursor.Position = UDim2.new(0, 0, ColorPicker.Hue, 0);

            HueBox.Text = '#' .. ColorPicker.Value:ToHex()
            RgbBox.Text = table.concat({ math.floor(ColorPicker.Value.R * 255), math.floor(ColorPicker.Value.G * 255), math.floor(ColorPicker.Value.B * 255) }, ', ')

            Library:SafeCallback(ColorPicker.Callback, ColorPicker.Value);
            Library:SafeCallback(ColorPicker.Changed, ColorPicker.Value);
        end;

        function ColorPicker:OnChanged(Func)
            ColorPicker.Changed = Func;
            Func(ColorPicker.Value)
        end;

        function ColorPicker:Show()
            for Frame, Val in next, Library.OpenedFrames do
                if Frame.Name == 'Color' then
                    Frame.Visible = false;
                    Library.OpenedFrames[Frame] = nil;
                end;
            end;

            PickerFrameOuter.Visible = true;
            Library.OpenedFrames[PickerFrameOuter] = true;
        end;

        function ColorPicker:Hide()
            PickerFrameOuter.Visible = false;
            Library.OpenedFrames[PickerFrameOuter] = nil;
        end;

        function ColorPicker:SetValue(HSV, Transparency)
            local Color = Color3.fromHSV(HSV[1], HSV[2], HSV[3]);

            ColorPicker.Transparency = Transparency or 0;
            ColorPicker:SetHSVFromRGB(Color);
            ColorPicker:Display();
        end;

        function ColorPicker:SetValueRGB(Color, Transparency)
            ColorPicker.Transparency = Transparency or 0;
            ColorPicker:SetHSVFromRGB(Color);
            ColorPicker:Display();
        end;

        SatVibMap.InputBegan:Connect(function(Input)
            if Input.UserInputType == Enum.UserInputType.MouseButton1 then
                while InputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) do
                    local MinX = SatVibMap.AbsolutePosition.X;
                    local MaxX = MinX + SatVibMap.AbsoluteSize.X;
                    local MouseX = math.clamp(Mouse.X, MinX, MaxX);

                    local MinY = SatVibMap.AbsolutePosition.Y;
                    local MaxY = MinY + SatVibMap.AbsoluteSize.Y;
                    local MouseY = math.clamp(Mouse.Y, MinY, MaxY);

                    ColorPicker.Sat = (MouseX - MinX) / (MaxX - MinX);
                    ColorPicker.Vib = 1 - ((MouseY - MinY) / (MaxY - MinY));
                    ColorPicker:Display();

                    RenderStepped:Wait();
                end;

                Library:AttemptSave();
            end;
        end);

        HueSelectorInner.InputBegan:Connect(function(Input)
            if Input.UserInputType == Enum.UserInputType.MouseButton1 then
                while InputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) do
                    local MinY = HueSelectorInner.AbsolutePosition.Y;
                    local MaxY = MinY + HueSelectorInner.AbsoluteSize.Y;
                    local MouseY = math.clamp(Mouse.Y, MinY, MaxY);

                    ColorPicker.Hue = ((MouseY - MinY) / (MaxY - MinY));
                    ColorPicker:Display();

                    RenderStepped:Wait();
                end;

                Library:AttemptSave();
            end;
        end);

        DisplayFrame.InputBegan:Connect(function(Input)
            if Input.UserInputType == Enum.UserInputType.MouseButton1 and not Library:MouseIsOverOpenedFrame() then
                if PickerFrameOuter.Visible then
                    ColorPicker:Hide()
                else
                    ContextMenu:Hide()
                    ColorPicker:Show()
                end;
            elseif Input.UserInputType == Enum.UserInputType.MouseButton2 and not Library:MouseIsOverOpenedFrame() then
                ContextMenu:Show()
                ColorPicker:Hide()
            end
        end);

        if TransparencyBoxInner then
            TransparencyBoxInner.InputBegan:Connect(function(Input)
                if Input.UserInputType == Enum.UserInputType.MouseButton1 then
                    while InputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) do
                        local MinX = TransparencyBoxInner.AbsolutePosition.X;
                        local MaxX = MinX + TransparencyBoxInner.AbsoluteSize.X;
                        local MouseX = math.clamp(Mouse.X, MinX, MaxX);

                        ColorPicker.Transparency = 1 - ((MouseX - MinX) / (MaxX - MinX));

                        ColorPicker:Display();

                        RenderStepped:Wait();
                    end;

                    Library:AttemptSave();
                end;
            end);
        end;

        Library:GiveSignal(InputService.InputBegan:Connect(function(Input)
            if Input.UserInputType == Enum.UserInputType.MouseButton1 then
                local AbsPos, AbsSize = PickerFrameOuter.AbsolutePosition, PickerFrameOuter.AbsoluteSize;

                if Mouse.X < AbsPos.X or Mouse.X > AbsPos.X + AbsSize.X
                    or Mouse.Y < (AbsPos.Y - 20 - 1) or Mouse.Y > AbsPos.Y + AbsSize.Y then

                    ColorPicker:Hide();
                end;

                if not Library:IsMouseOverFrame(ContextMenu.Container) then
                    ContextMenu:Hide()
                end
            end;

            if Input.UserInputType == Enum.UserInputType.MouseButton2 and ContextMenu.Container.Visible then
                if not Library:IsMouseOverFrame(ContextMenu.Container) and not Library:IsMouseOverFrame(DisplayFrame) then
                    ContextMenu:Hide()
                end
            end
        end))

        ColorPicker:Display();
        ColorPicker.DisplayFrame = DisplayFrame

        Options[Idx] = ColorPicker;

        return ColorPicker;
    end;

    function Funcs:AddKeyPicker(Idx, Info)
        local ParentObj = self;
        local ToggleLabel = self.TextLabel;
        local Container = self.Container;

        assert(Info.Default, 'AddKeyPicker: Missing default value.');

        local KeyPicker = {
            Value = Info.Default;
            Toggled = false;
            Mode = Info.Mode or 'Toggle'; -- Always, Toggle, Hold
            Type = 'KeyPicker';
            Callback = Info.Callback or function(Value) end;
            ChangedCallback = Info.ChangedCallback or function(New) end;

            SyncToggleState = Info.SyncToggleState or false;
        };

        if KeyPicker.SyncToggleState then
            Info.Modes = { 'Toggle' }
            Info.Mode = 'Toggle'
        end

        local PickOuter = Library:Create('Frame', {
            BackgroundColor3 = Color3.new(0, 0, 0);
            BorderColor3 = Color3.new(0, 0, 0);
            Size = UDim2.new(0, 28, 0, 15);
            ZIndex = 6;
            Parent = ToggleLabel;
        });

        local PickInner = Library:Create('Frame', {
            BackgroundColor3 = Library.BackgroundColor;
            BorderColor3 = Library.OutlineColor;
            BorderMode = Enum.BorderMode.Inset;
            Size = UDim2.new(1, 0, 1, 0);
            ZIndex = 7;
            Parent = PickOuter;
        });

        Library:AddToRegistry(PickInner, {
            BackgroundColor3 = 'BackgroundColor';
            BorderColor3 = 'OutlineColor';
        });

        local DisplayLabel = Library:CreateLabel({
            Size = UDim2.new(1, 0, 1, 0);
            TextSize = 12;
            Text = Info.Default;
            TextWrapped = true;
            ZIndex = 8;
            Parent = PickInner;
        });

        local ModeSelectOuter = Library:Create('Frame', {
            BorderColor3 = Color3.new(0, 0, 0);
            Position = UDim2.fromOffset(ToggleLabel.AbsolutePosition.X + ToggleLabel.AbsoluteSize.X + 4, ToggleLabel.AbsolutePosition.Y + 1);
            Size = UDim2.new(0, 60, 0, 45 + 2);
            Visible = false;
            ZIndex = 14;
            Parent = ScreenGui;
        });

        ToggleLabel:GetPropertyChangedSignal('AbsolutePosition'):Connect(function()
            ModeSelectOuter.Position = UDim2.fromOffset(ToggleLabel.AbsolutePosition.X + ToggleLabel.AbsoluteSize.X + 4, ToggleLabel.AbsolutePosition.Y + 1);
        end);

        local ModeSelectInner = Library:Create('Frame', {
            BackgroundColor3 = Library.BackgroundColor;
            BorderColor3 = Library.OutlineColor;
            BorderMode = Enum.BorderMode.Inset;
            Size = UDim2.new(1, 0, 1, 0);
            ZIndex = 15;
            Parent = ModeSelectOuter;
        });

        Library:AddToRegistry(ModeSelectInner, {
            BackgroundColor3 = 'BackgroundColor';
            BorderColor3 = 'OutlineColor';
        });

        Library:Create('UIListLayout', {
            FillDirection = Enum.FillDirection.Vertical;
            SortOrder = Enum.SortOrder.LayoutOrder;
            Parent = ModeSelectInner;
        });

        local ContainerLabel = Library:CreateLabel({
            TextXAlignment = Enum.TextXAlignment.Left;
            Size = UDim2.new(1, 0, 0, 18);
            TextSize = 12;
            Visible = false;
            ZIndex = 110;
            Parent = Library.KeybindContainer;
        },  true);

        local Modes = Info.Modes or { 'Always', 'Toggle', 'Hold' };
        local ModeButtons = {};

        for Idx, Mode in next, Modes do
            local ModeButton = {};

            local Label = Library:CreateLabel({
                Active = false;
                Size = UDim2.new(1, 0, 0, 15);
                TextSize = 12;
                Text = Mode;
                ZIndex = 16;
                Parent = ModeSelectInner;
            });

            function ModeButton:Select()
                for _, Button in next, ModeButtons do
                    Button:Deselect();
                end;

                KeyPicker.Mode = Mode;

                Label.TextColor3 = Library.AccentColor;
                Library.RegistryMap[Label].Properties.TextColor3 = 'AccentColor';

                ModeSelectOuter.Visible = false;
            end;

            function ModeButton:Deselect()
                KeyPicker.Mode = nil;

                Label.TextColor3 = Library.FontColor;
                Library.RegistryMap[Label].Properties.TextColor3 = 'FontColor';
            end;

            Label.InputBegan:Connect(function(Input)
                if Input.UserInputType == Enum.UserInputType.MouseButton1 then
                    ModeButton:Select();
                    Library:AttemptSave();
                end;
            end);

            if Mode == KeyPicker.Mode then
                ModeButton:Select();
            end;

            ModeButtons[Mode] = ModeButton;
        end;

        function KeyPicker:Update()
            if Info.NoUI then
                return;
            end;

            local State = KeyPicker:GetState();

            ContainerLabel.Visible = State;
            ContainerLabel.Text = string.format('[%s]: %s (%s)', KeyPicker.Value:sub(1, 5):upper(), Info.Text, KeyPicker.Mode);
            ContainerLabel.TextColor3 = (State and (ParentObj.Value or true)) and Library.AccentColor or Library.FontColor;

            Library.RegistryMap[ContainerLabel].Properties.TextColor3 = State and 'AccentColor' or 'FontColor';

            local YSize = 0
            local XSize = 0

            for _, Label in next, Library.KeybindContainer:GetChildren() do
                if Label:IsA('TextLabel') and Label.Visible then
                    YSize = YSize + 18;
                    if (Label.TextBounds.X > XSize) then
                        XSize = Label.TextBounds.X
                    end
                end;
            end;

            Library.KeybindFrame.Size = UDim2.new(0, math.max(XSize + 10, 50), 0, YSize + 23)
        end;

        function KeyPicker:GetState()
            if KeyPicker.Mode == 'Always' then
                return true;
            elseif KeyPicker.Mode == 'Hold' then
                if KeyPicker.Value == 'None' then
                    return false;
                end

                local Key = KeyPicker.Value;

                if Key == 'MB1' or Key == 'MB2' then
                    return Key == 'MB1' and InputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1)
                        or Key == 'MB2' and InputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton2);
                elseif Key == '-' then
                    return false
                else
                    return InputService:IsKeyDown(Enum.KeyCode[KeyPicker.Value]);
                end;
            else
                return KeyPicker.Toggled;
            end;
        end;

        function KeyPicker:SetValue(Data)
            local Key, Mode = Data[1], Data[2];
            DisplayLabel.Text = Key;
            KeyPicker.Value = Key;
            ModeButtons[Mode]:Select();
            KeyPicker:Update();
        end;

        function KeyPicker:OnClick(Callback)
            KeyPicker.Clicked = Callback
        end

        function KeyPicker:OnChanged(Callback)
            KeyPicker.Changed = Callback
            Callback(KeyPicker.Value)
        end

        if ParentObj.Addons then
            table.insert(ParentObj.Addons, KeyPicker)
        end

        function KeyPicker:DoClick()
            if ParentObj.Type == 'Toggle' and KeyPicker.SyncToggleState then
                ParentObj:SetValue(not ParentObj.Value)
            end

            Library:SafeCallback(KeyPicker.Callback, KeyPicker.Toggled)
            Library:SafeCallback(KeyPicker.Clicked, KeyPicker.Toggled)
        end

        local Picking = false;

        PickOuter.InputBegan:Connect(function(Input, Processed)
            if InputService:GetFocusedTextBox() then
                return false;
            end;
            if Input.UserInputType == Enum.UserInputType.MouseButton1 and not Library:MouseIsOverOpenedFrame() then
                Picking = true;

                DisplayLabel.Text = '';

                local Break;
                local Text = '';

                task.spawn(function()
                    while (not Break) do
                        if Text == '...' then
                            Text = '';
                        end;

                        Text = Text .. '.';
                        DisplayLabel.Text = Text;

                        task.wait(0.4);
                    end;
                end);

                task.wait(0.2);

                local Event;
                Event = InputService.InputBegan:Connect(function(Input)
                    local Key;

                    if Input.UserInputType == Enum.UserInputType.Keyboard then
                        if Input.KeyCode == Enum.KeyCode.Backspace then
                            Key = '-';
                        else
                            Key = Input.KeyCode.Name;
                        end;
                    elseif Input.UserInputType == Enum.UserInputType.MouseButton1 then
                        Key = 'MB1';
                    elseif Input.UserInputType == Enum.UserInputType.MouseButton2 then
                        Key = 'MB2';
                    end;

                    Break = true;
                    Picking = false;

                    DisplayLabel.Text = Key;
                    KeyPicker.Value = Key;

                    Library:SafeCallback(KeyPicker.ChangedCallback, Input.KeyCode or Input.UserInputType)
                    Library:SafeCallback(KeyPicker.Changed, Input.KeyCode or Input.UserInputType)

                    Library:AttemptSave();

                    Event:Disconnect();
                end);
            elseif Input.UserInputType == Enum.UserInputType.MouseButton2 and not Library:MouseIsOverOpenedFrame() then
                ModeSelectOuter.Visible = true;
            end;
        end);

        Library:GiveSignal(InputService.InputBegan:Connect(function(Input, Processed)
            if Processed then return end;
            if (not Picking) then
                if KeyPicker.Mode == 'Toggle' then
                    local Key = KeyPicker.Value;

                    if Key == 'MB1' or Key == 'MB2' then
                        if Key == 'MB1' and Input.UserInputType == Enum.UserInputType.MouseButton1
                        or Key == 'MB2' and Input.UserInputType == Enum.UserInputType.MouseButton2 then
                            KeyPicker.Toggled = not KeyPicker.Toggled
                            KeyPicker:DoClick()
                        end;
                    elseif Input.UserInputType == Enum.UserInputType.Keyboard then
                        if Input.KeyCode.Name == Key then
                            KeyPicker.Toggled = not KeyPicker.Toggled;
                            KeyPicker:DoClick()
                        end;
                    end;
                end;

                KeyPicker:Update();
            end;

            if Input.UserInputType == Enum.UserInputType.MouseButton1 then
                local AbsPos, AbsSize = ModeSelectOuter.AbsolutePosition, ModeSelectOuter.AbsoluteSize;

                if Mouse.X < AbsPos.X or Mouse.X > AbsPos.X + AbsSize.X
                    or Mouse.Y < (AbsPos.Y - 20 - 1) or Mouse.Y > AbsPos.Y + AbsSize.Y then

                    ModeSelectOuter.Visible = false;
                end;
            end;
        end))

        Library:GiveSignal(InputService.InputEnded:Connect(function(Input)
            if InputService:GetFocusedTextBox() then
                return false;
            end;
            if (not Picking) then
                KeyPicker:Update();
            end;
        end))

        KeyPicker:Update();

        Options[Idx] = KeyPicker;

        return KeyPicker;
    end;

    BaseAddons.__index = Funcs;
    BaseAddons.__namecall = function(Table, Key, ...)
        return Funcs[Key](...);
    end;
end;

local BaseGroupbox = {};

do
    local Funcs = {};

    function Funcs:AddBlank(Size)
        local Groupbox = self;
        local Container = Groupbox.Container;

        Library:Create('Frame', {
            BackgroundTransparency = 1;
            Size = UDim2.new(1, 0, 0, Size);
            ZIndex = 1;
            Parent = Container;
        });
    end;

    function Funcs:AddLabel(Text, DoesWrap)
        local Label = {};

        local Groupbox = self;
        local Container = Groupbox.Container;

        local TextLabel = Library:CreateLabel({
            Size = UDim2.new(1, -4, 0, 15);
            TextSize = 12;
            Text = Text;
            TextWrapped = DoesWrap or false,
            TextXAlignment = Enum.TextXAlignment.Left;
            ZIndex = 5;
            Parent = Container;
        });

        if DoesWrap then
            local Y = select(2, Library:GetTextBounds(Text, Font, 12, Vector2.new(TextLabel.AbsoluteSize.X, math.huge)))
            TextLabel.Size = UDim2.new(1, -4, 0, Y)
        else
            Library:Create('UIListLayout', {
                Padding = UDim.new(0, 4);
                FillDirection = Enum.FillDirection.Horizontal;
                HorizontalAlignment = Enum.HorizontalAlignment.Right;
                SortOrder = Enum.SortOrder.LayoutOrder;
                Parent = TextLabel;
            });
        end

        Label.TextLabel = TextLabel;
        Label.Container = Container;

        function Label:SetText(Text)
            TextLabel.Text = Text

            if DoesWrap then
                local Y = select(2, Library:GetTextBounds(Text, Font, 12, Vector2.new(TextLabel.AbsoluteSize.X, math.huge)))
                TextLabel.Size = UDim2.new(1, -4, 0, Y)
            end

            Groupbox:Resize();
        end

        if (not DoesWrap) then
            setmetatable(Label, BaseAddons);
        end

        Groupbox:AddBlank(5);
        Groupbox:Resize();

        return Label;
    end;

    function Funcs:AddButton(...)
        -- TODO: Eventually redo this
        local Button = {};
        local function ProcessButtonParams(Class, Obj, ...)
            local Props = select(1, ...)
            if type(Props) == 'table' then
                Obj.Text = Props.Text
                Obj.Func = Props.Func
                Obj.DoubleClick = Props.DoubleClick
                Obj.Tooltip = Props.Tooltip
            else
                Obj.Text = select(1, ...)
                Obj.Func = select(2, ...)
            end

            assert(type(Obj.Func) == 'function', 'AddButton: `Func` callback is missing.');
        end

        ProcessButtonParams('Button', Button, ...)

        local Groupbox = self;
        local Container = Groupbox.Container;

        local function CreateBaseButton(Button)
            local Outer = Library:Create('Frame', {
                BackgroundColor3 = Color3.new(0, 0, 0);
                BorderColor3 = Color3.new(0, 0, 0);
                Size = UDim2.new(1, -4, 0, 20);
                ZIndex = 5;
            });

            local Inner = Library:Create('Frame', {
                BackgroundColor3 = Library.MainColor;
                BorderColor3 = Library.OutlineColor;
                BorderMode = Enum.BorderMode.Inset;
                Size = UDim2.new(1, 0, 1, 0);
                ZIndex = 6;
                Parent = Outer;
            });

            local Label = Library:CreateLabel({
                Size = UDim2.new(1, 0, 1, 0);
                TextSize = 12;
                Text = Button.Text;
                ZIndex = 6;
                Parent = Inner;
            });

            Library:Create('UIGradient', {
                Color = ColorSequence.new({
                    ColorSequenceKeypoint.new(0, Color3.new(1, 1, 1)),
                    ColorSequenceKeypoint.new(1, Color3.fromRGB(212, 212, 212))
                });
                Rotation = 90;
                Parent = Inner;
            });

            Library:AddToRegistry(Outer, {
                BorderColor3 = 'Black';
            });

            Library:AddToRegistry(Inner, {
                BackgroundColor3 = 'MainColor';
                BorderColor3 = 'OutlineColor';
            });

            Library:OnHighlight(Outer, Outer,
                { BorderColor3 = 'AccentColor' },
                { BorderColor3 = 'Black' }
            );

            return Outer, Inner, Label
        end

        local function InitEvents(Button)
            local function WaitForEvent(event, timeout, validator)
                local bindable = Instance.new('BindableEvent')
                local connection = event:Once(function(...)

                    if type(validator) == 'function' and validator(...) then
                        bindable:Fire(true)
                    else
                        bindable:Fire(false)
                    end
                end)
                task.delay(timeout, function()
                    connection:disconnect()
                    bindable:Fire(false)
                end)
                return bindable.Event:Wait()
            end

            local function ValidateClick(Input)
                if Library:MouseIsOverOpenedFrame() then
                    return false
                end

                if Input.UserInputType ~= Enum.UserInputType.MouseButton1 then
                    return false
                end

                return true
            end

            Button.Outer.InputBegan:Connect(function(Input)
                if not ValidateClick(Input) then return end
                if Button.Locked then return end

                if Button.DoubleClick then
                    Library:RemoveFromRegistry(Button.Label)
                    Library:AddToRegistry(Button.Label, { TextColor3 = 'AccentColor' })

                    Button.Label.TextColor3 = Library.AccentColor
                    Button.Label.Text = 'Are you sure?'
                    Button.Locked = true

                    local clicked = WaitForEvent(Button.Outer.InputBegan, 0.5, ValidateClick)

                    Library:RemoveFromRegistry(Button.Label)
                    Library:AddToRegistry(Button.Label, { TextColor3 = 'FontColor' })

                    Button.Label.TextColor3 = Library.FontColor
                    Button.Label.Text = Button.Text
                    task.defer(rawset, Button, 'Locked', false)

                    if clicked then
                        Library:SafeCallback(Button.Func)
                    end

                    return
                end

                Library:SafeCallback(Button.Func);
            end)
        end

        Button.Outer, Button.Inner, Button.Label = CreateBaseButton(Button)
        Button.Outer.Parent = Container

        InitEvents(Button)

        function Button:AddTooltip(tooltip)
            if type(tooltip) == 'string' then
                Library:AddToolTip(tooltip, self.Outer)
            end
            return self
        end


        function Button:AddButton(...)
            local SubButton = {}

            ProcessButtonParams('SubButton', SubButton, ...)

            self.Outer.Size = UDim2.new(0.5, -2, 0, 20)

            SubButton.Outer, SubButton.Inner, SubButton.Label = CreateBaseButton(SubButton)

            SubButton.Outer.Position = UDim2.new(1, 3, 0, 0)
            SubButton.Outer.Size = UDim2.fromOffset(self.Outer.AbsoluteSize.X - 2, self.Outer.AbsoluteSize.Y)
            SubButton.Outer.Parent = self.Outer

            function SubButton:AddTooltip(tooltip)
                if type(tooltip) == 'string' then
                    Library:AddToolTip(tooltip, self.Outer)
                end
                return SubButton
            end

            if type(SubButton.Tooltip) == 'string' then
                SubButton:AddTooltip(SubButton.Tooltip)
            end

            InitEvents(SubButton)
            return SubButton
        end

        if type(Button.Tooltip) == 'string' then
            Button:AddTooltip(Button.Tooltip)
        end

        Groupbox:AddBlank(5);
        Groupbox:Resize();

        return Button;
    end;

    function Funcs:AddDivider()
        local Groupbox = self;
        local Container = self.Container

        local Divider = {
            Type = 'Divider',
        }

        Groupbox:AddBlank(2);
        local DividerOuter = Library:Create('Frame', {
            BackgroundColor3 = Color3.new(0, 0, 0);
            BorderColor3 = Color3.new(0, 0, 0);
            Size = UDim2.new(1, -4, 0, 5);
            ZIndex = 5;
            Parent = Container;
        });

        local DividerInner = Library:Create('Frame', {
            BackgroundColor3 = Library.MainColor;
            BorderColor3 = Library.OutlineColor;
            BorderMode = Enum.BorderMode.Inset;
            Size = UDim2.new(1, 0, 1, 0);
            ZIndex = 6;
            Parent = DividerOuter;
        });

        Library:AddToRegistry(DividerOuter, {
            BorderColor3 = 'Black';
        });

        Library:AddToRegistry(DividerInner, {
            BackgroundColor3 = 'MainColor';
            BorderColor3 = 'OutlineColor';
        });

        Groupbox:AddBlank(9);
        Groupbox:Resize();
    end

    function Funcs:AddInput(Idx, Info)
        assert(Info.Text, 'AddInput: Missing `Text` string.')

        local Textbox = {
            Value = Info.Default or '';
            Numeric = Info.Numeric or false;
            Finished = Info.Finished or false;
            Type = 'Input';
            Callback = Info.Callback or function(Value) end;
        };

        local Groupbox = self;
        local Container = Groupbox.Container;

        local InputLabel = Library:CreateLabel({
            Size = UDim2.new(1, 0, 0, 15);
            TextSize = 12;
            Text = Info.Text;
            TextXAlignment = Enum.TextXAlignment.Left;
            ZIndex = 5;
            Parent = Container;
        });

        Groupbox:AddBlank(1);

        local TextBoxOuter = Library:Create('Frame', {
            BackgroundColor3 = Color3.new(0, 0, 0);
            BorderColor3 = Color3.new(0, 0, 0);
            Size = UDim2.new(1, -4, 0, 20);
            ZIndex = 5;
            Parent = Container;
        });

        local TextBoxInner = Library:Create('Frame', {
            BackgroundColor3 = Library.MainColor;
            BorderColor3 = Library.OutlineColor;
            BorderMode = Enum.BorderMode.Inset;
            Size = UDim2.new(1, 0, 1, 0);
            ZIndex = 6;
            Parent = TextBoxOuter;
        });

        Library:AddToRegistry(TextBoxInner, {
            BackgroundColor3 = 'MainColor';
            BorderColor3 = 'OutlineColor';
        });

        Library:OnHighlight(TextBoxOuter, TextBoxOuter,
            { BorderColor3 = 'AccentColor' },
            { BorderColor3 = 'Black' }
        );

        if type(Info.Tooltip) == 'string' then
            Library:AddToolTip(Info.Tooltip, TextBoxOuter)
        end

        Library:Create('UIGradient', {
            Color = ColorSequence.new({
                ColorSequenceKeypoint.new(0, Color3.new(1, 1, 1)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(212, 212, 212))
            });
            Rotation = 90;
            Parent = TextBoxInner;
        });

        local Container = Library:Create('Frame', {
            BackgroundTransparency = 1;
            ClipsDescendants = true;

            Position = UDim2.new(0, 5, 0, 0);
            Size = UDim2.new(1, -5, 1, 0);

            ZIndex = 7;
            Parent = TextBoxInner;
        })

        local Box = Library:Create('TextBox', {
            BackgroundTransparency = 1;

            Position = UDim2.fromOffset(0, 0),
            Size = UDim2.fromScale(5, 1),

            Font = Library.Font;
            PlaceholderColor3 = Color3.fromRGB(190, 190, 190);
            PlaceholderText = Info.Placeholder or '';

            Text = Info.Default or '';
            TextColor3 = Library.FontColor;
            TextSize = 12;
            TextStrokeTransparency = 0;
            TextXAlignment = Enum.TextXAlignment.Left;

            ZIndex = 7;
            Parent = Container;
        });

        Library:ApplyTextStroke(Box);

        function Textbox:SetValue(Text)
            if Info.MaxLength and #Text > Info.MaxLength then
                Text = Text:sub(1, Info.MaxLength);
            end;

            if Textbox.Numeric then
                if (not tonumber(Text)) and Text:len() > 0 then
                    Text = Textbox.Value
                end
            end

            Textbox.Value = Text;
            Box.Text = Text;

            Library:SafeCallback(Textbox.Callback, Textbox.Value);
            Library:SafeCallback(Textbox.Changed, Textbox.Value);
        end;

        if Textbox.Finished then
            Box.FocusLost:Connect(function(enter)
                if not enter then return end

                Textbox:SetValue(Box.Text);
                Library:AttemptSave();
            end)
        else
            Box:GetPropertyChangedSignal('Text'):Connect(function()
                Textbox:SetValue(Box.Text);
                Library:AttemptSave();
            end);
        end

        -- https://devforum.roblox.com/t/how-to-make-textboxes-follow-current-cursor-position/1368429/6
        -- thank you nicemike40 :)

        local function Update()
            local PADDING = 2
            local reveal = Container.AbsoluteSize.X

            if not Box:IsFocused() or Box.TextBounds.X <= reveal - 2 * PADDING then
                -- we aren't focused, or we fit so be normal
                Box.Position = UDim2.new(0, PADDING, 0, 0)
            else
                -- we are focused and don't fit, so adjust position
                local cursor = Box.CursorPosition
                if cursor ~= -1 then
                    -- calculate pixel width of text from start to cursor
                    local subtext = string.sub(Box.Text, 1, cursor-1)
                    local width = TextService:GetTextSize(subtext, Box.TextSize, Box.Font, Vector2.new(math.huge, math.huge)).X

                    -- check if we're inside the box with the cursor
                    local currentCursorPos = Box.Position.X.Offset + width

                    -- adjust if necessary
                    if currentCursorPos < PADDING then
                        Box.Position = UDim2.fromOffset(PADDING-width, 0)
                    elseif currentCursorPos > reveal - PADDING - 1 then
                        Box.Position = UDim2.fromOffset(reveal-width-PADDING-1, 0)
                    end
                end
            end
        end

        task.spawn(Update)

        Box:GetPropertyChangedSignal('Text'):Connect(Update)
        Box:GetPropertyChangedSignal('CursorPosition'):Connect(Update)
        Box.FocusLost:Connect(Update)
        Box.Focused:Connect(Update)

        Library:AddToRegistry(Box, {
            TextColor3 = 'FontColor';
        });

        function Textbox:OnChanged(Func)
            Textbox.Changed = Func;
            Func(Textbox.Value);
        end;

        Groupbox:AddBlank(5);
        Groupbox:Resize();

        Options[Idx] = Textbox;

        return Textbox;
    end;

    function Funcs:AddToggle(Idx, Info)
        assert(Info.Text, 'AddInput: Missing `Text` string.')

        local Toggle = {
            Value = Info.Default or false;
            Type = 'Toggle';

            Callback = Info.Callback or function(Value) end;
            Addons = {},
            Risky = Info.Risky,
        };

        local Groupbox = self;
        local Container = Groupbox.Container;

        local ToggleOuter = Library:Create('Frame', {
            BackgroundColor3 = Color3.new(0, 0, 0);
            BorderColor3 = Color3.new(0, 0, 0);
            Size = UDim2.new(0, 13, 0, 13);
            ZIndex = 5;
            Parent = Container;
        });

        Library:AddToRegistry(ToggleOuter, {
            BorderColor3 = 'Black';
        });

        local ToggleInner = Library:Create('Frame', {
            BackgroundColor3 = Library.MainColor;
            BorderColor3 = Library.OutlineColor;
            BorderMode = Enum.BorderMode.Inset;
            Size = UDim2.new(1, 0, 1, 0);
            ZIndex = 6;
            Parent = ToggleOuter;
        });

        Library:AddToRegistry(ToggleInner, {
            BackgroundColor3 = 'MainColor';
            BorderColor3 = 'OutlineColor';
        });

        local ToggleLabel = Library:CreateLabel({
            Size = UDim2.new(0, 216, 1, 0);
            Position = UDim2.new(1, 6, 0, 0);
            TextSize = 12;
            Text = Info.Text;
            TextXAlignment = Enum.TextXAlignment.Left;
            ZIndex = 6;
            Parent = ToggleInner;
        });

        Library:Create('UIListLayout', {
            Padding = UDim.new(0, 4);
            FillDirection = Enum.FillDirection.Horizontal;
            HorizontalAlignment = Enum.HorizontalAlignment.Right;
            SortOrder = Enum.SortOrder.LayoutOrder;
            Parent = ToggleLabel;
        });

        local ToggleRegion = Library:Create('Frame', {
            BackgroundTransparency = 1;
            Size = UDim2.new(0, 170, 1, 0);
            ZIndex = 8;
            Parent = ToggleOuter;
        });

        Library:OnHighlight(ToggleRegion, ToggleOuter,
            { BorderColor3 = 'AccentColor' },
            { BorderColor3 = 'Black' }
        );

        function Toggle:UpdateColors()
            Toggle:Display();
        end;

        if type(Info.Tooltip) == 'string' then
            Library:AddToolTip(Info.Tooltip, ToggleRegion)
        end

        function Toggle:Display()
            ToggleInner.BackgroundColor3 = Toggle.Value and Library.AccentColor or Library.MainColor;
            ToggleInner.BorderColor3 = Toggle.Value and Library.AccentColorDark or Library.OutlineColor;

            Library.RegistryMap[ToggleInner].Properties.BackgroundColor3 = Toggle.Value and 'AccentColor' or 'MainColor';
            Library.RegistryMap[ToggleInner].Properties.BorderColor3 = Toggle.Value and 'AccentColorDark' or 'OutlineColor';
        end;

        function Toggle:OnChanged(Func)
            Toggle.Changed = Func;
            Func(Toggle.Value);
        end;

        function Toggle:SetValue(Bool)
            Bool = (not not Bool);

            Toggle.Value = Bool;
            Toggle:Display();

            for _, Addon in next, Toggle.Addons do
                if Addon.Type == 'KeyPicker' and Addon.SyncToggleState then
                    Addon.Toggled = Bool
                    Addon:Update()
                end
            end

            Library:SafeCallback(Toggle.Callback, Toggle.Value);
            Library:SafeCallback(Toggle.Changed, Toggle.Value);
            Library:UpdateDependencyBoxes();
        end;

        ToggleRegion.InputBegan:Connect(function(Input)
            if Input.UserInputType == Enum.UserInputType.MouseButton1 and not Library:MouseIsOverOpenedFrame() then
                Toggle:SetValue(not Toggle.Value) -- Why was it not like this from the start?
                Library:AttemptSave();
            end;
        end);

        if Toggle.Risky then
            Library:RemoveFromRegistry(ToggleLabel)
            ToggleLabel.TextColor3 = Library.RiskColor
            Library:AddToRegistry(ToggleLabel, { TextColor3 = 'RiskColor' })
        end

        Toggle:Display();
        Groupbox:AddBlank(Info.BlankSize or 5 + 2);
        Groupbox:Resize();

        Toggle.TextLabel = ToggleLabel;
        Toggle.Container = Container;
        setmetatable(Toggle, BaseAddons);

        Toggles[Idx] = Toggle;

        Library:UpdateDependencyBoxes();

        return Toggle;
    end;

    function Funcs:AddSlider(Idx, Info)
        assert(Info.Default, 'AddSlider: Missing default value.');
        assert(Info.Text, 'AddSlider: Missing slider text.');
        assert(Info.Min, 'AddSlider: Missing minimum value.');
        assert(Info.Max, 'AddSlider: Missing maximum value.');
        assert(Info.Rounding, 'AddSlider: Missing rounding value.');

        local Slider = {
            Value = Info.Default;
            Min = Info.Min;
            Max = Info.Max;
            Rounding = Info.Rounding;
            MaxSize = 232;
            Type = 'Slider';
            Callback = Info.Callback or function(Value) end;
        };

        local Groupbox = self;
        local Container = Groupbox.Container;

        if not Info.Compact then
            Library:CreateLabel({
                Size = UDim2.new(1, 0, 0, 10);
                TextSize = 12;
                Text = Info.Text;
                TextXAlignment = Enum.TextXAlignment.Left;
                TextYAlignment = Enum.TextYAlignment.Bottom;
                ZIndex = 5;
                Parent = Container;
            });

            Groupbox:AddBlank(3);
        end

        local SliderOuter = Library:Create('Frame', {
            BackgroundColor3 = Color3.new(0, 0, 0);
            BorderColor3 = Color3.new(0, 0, 0);
            Size = UDim2.new(1, -4, 0, 13);
            ZIndex = 5;
            Parent = Container;
        });

        Library:AddToRegistry(SliderOuter, {
            BorderColor3 = 'Black';
        });

        local SliderInner = Library:Create('Frame', {
            BackgroundColor3 = Library.MainColor;
            BorderColor3 = Library.OutlineColor;
            BorderMode = Enum.BorderMode.Inset;
            Size = UDim2.new(1, 0, 1, 0);
            ZIndex = 6;
            Parent = SliderOuter;
        });

        Library:AddToRegistry(SliderInner, {
            BackgroundColor3 = 'MainColor';
            BorderColor3 = 'OutlineColor';
        });

        local Fill = Library:Create('Frame', {
            BackgroundColor3 = Library.AccentColor;
            BorderColor3 = Library.AccentColorDark;
            Size = UDim2.new(0, 0, 1, 0);
            ZIndex = 7;
            Parent = SliderInner;
        });

        Library:AddToRegistry(Fill, {
            BackgroundColor3 = 'AccentColor';
            BorderColor3 = 'AccentColorDark';
        });

        local HideBorderRight = Library:Create('Frame', {
            BackgroundColor3 = Library.AccentColor;
            BorderSizePixel = 0;
            Position = UDim2.new(1, 0, 0, 0);
            Size = UDim2.new(0, 1, 1, 0);
            ZIndex = 8;
            Parent = Fill;
        });

        Library:AddToRegistry(HideBorderRight, {
            BackgroundColor3 = 'AccentColor';
        });

        local DisplayLabel = Library:CreateLabel({
            Size = UDim2.new(1, 0, 1, 0);
            TextSize = 12;
            Text = 'Infinite';
            ZIndex = 9;
            Parent = SliderInner;
        });

        Library:OnHighlight(SliderOuter, SliderOuter,
            { BorderColor3 = 'AccentColor' },
            { BorderColor3 = 'Black' }
        );

        if type(Info.Tooltip) == 'string' then
            Library:AddToolTip(Info.Tooltip, SliderOuter)
        end

        function Slider:UpdateColors()
            Fill.BackgroundColor3 = Library.AccentColor;
            Fill.BorderColor3 = Library.AccentColorDark;
        end;

        function Slider:Display()
            local Suffix = Info.Suffix or '';

            if Info.Compact then
                DisplayLabel.Text = Info.Text .. ': ' .. Slider.Value .. Suffix
            elseif Info.HideMax then
                DisplayLabel.Text = string.format('%s', Slider.Value .. Suffix)
            else
                DisplayLabel.Text = string.format('%s/%s', Slider.Value .. Suffix, Slider.Max .. Suffix);
            end

            local X = math.ceil(Library:MapValue(Slider.Value, Slider.Min, Slider.Max, 0, Slider.MaxSize));
            Fill.Size = UDim2.new(0, X, 1, 0);

            HideBorderRight.Visible = not (X == Slider.MaxSize or X == 0);
        end;

        function Slider:OnChanged(Func)
            Slider.Changed = Func;
            Func(Slider.Value);
        end;

        local function Round(Value)
            if Slider.Rounding == 0 then
                return math.floor(Value);
            end;


            return tonumber(string.format('%.' .. Slider.Rounding .. 'f', Value))
        end;

        function Slider:GetValueFromXOffset(X)
            return Round(Library:MapValue(X, 0, Slider.MaxSize, Slider.Min, Slider.Max));
        end;

        function Slider:SetValue(Str)
            local Num = tonumber(Str);

            if (not Num) then
                return;
            end;

            Num = math.clamp(Num, Slider.Min, Slider.Max);

            Slider.Value = Num;
            Slider:Display();

            Library:SafeCallback(Slider.Callback, Slider.Value);
            Library:SafeCallback(Slider.Changed, Slider.Value);
        end;

        SliderInner.InputBegan:Connect(function(Input)
            if Input.UserInputType == Enum.UserInputType.MouseButton1 and not Library:MouseIsOverOpenedFrame() then
                local mPos = Mouse.X;
                local gPos = Fill.Size.X.Offset;
                local Diff = mPos - (Fill.AbsolutePosition.X + gPos);

                while InputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) do
                    local nMPos = Mouse.X;
                    local nX = math.clamp(gPos + (nMPos - mPos) + Diff, 0, Slider.MaxSize);

                    local nValue = Slider:GetValueFromXOffset(nX);
                    local OldValue = Slider.Value;
                    Slider.Value = nValue;

                    Slider:Display();

                    if nValue ~= OldValue then
                        Library:SafeCallback(Slider.Callback, Slider.Value);
                        Library:SafeCallback(Slider.Changed, Slider.Value);
                    end;

                    RenderStepped:Wait();
                end;

                Library:AttemptSave();
            end;
        end);

        Slider:Display();
        Groupbox:AddBlank(Info.BlankSize or 6);
        Groupbox:Resize();

        Options[Idx] = Slider;

        return Slider;
    end;

    function Funcs:AddDropdown(Idx, Info)
        if Info.SpecialType == 'Player' then
            Info.Values = GetPlayersString();
            Info.AllowNull = true;
        elseif Info.SpecialType == 'Team' then
            Info.Values = GetTeamsString();
            Info.AllowNull = true;
        end;

        assert(Info.Values, 'AddDropdown: Missing dropdown value list.');
        assert(Info.AllowNull or Info.Default, 'AddDropdown: Missing default value. Pass `AllowNull` as true if this was intentional.')

        if (not Info.Text) then
            Info.Compact = true;
        end;

        local Dropdown = {
            Values = Info.Values;
            Value = Info.Multi and {};
            Multi = Info.Multi;
            Type = 'Dropdown';
            SpecialType = Info.SpecialType; -- can be either 'Player' or 'Team'
            Callback = Info.Callback or function(Value) end;
        };

        local Groupbox = self;
        local Container = Groupbox.Container;

        local RelativeOffset = 0;

        if not Info.Compact then
            local DropdownLabel = Library:CreateLabel({
                Size = UDim2.new(1, 0, 0, 10);
                TextSize = 12;
                Text = Info.Text;
                TextXAlignment = Enum.TextXAlignment.Left;
                TextYAlignment = Enum.TextYAlignment.Bottom;
                ZIndex = 5;
                Parent = Container;
            });

            Groupbox:AddBlank(3);
        end

        for _, Element in next, Container:GetChildren() do
            if not Element:IsA('UIListLayout') then
                RelativeOffset = RelativeOffset + Element.Size.Y.Offset;
            end;
        end;

        local DropdownOuter = Library:Create('Frame', {
            BackgroundColor3 = Color3.new(0, 0, 0);
            BorderColor3 = Color3.new(0, 0, 0);
            Size = UDim2.new(1, -4, 0, 20);
            ZIndex = 5;
            Parent = Container;
        });

        Library:AddToRegistry(DropdownOuter, {
            BorderColor3 = 'Black';
        });

        local DropdownInner = Library:Create('Frame', {
            BackgroundColor3 = Library.MainColor;
            BorderColor3 = Library.OutlineColor;
            BorderMode = Enum.BorderMode.Inset;
            Size = UDim2.new(1, 0, 1, 0);
            ZIndex = 6;
            Parent = DropdownOuter;
        });

        Library:AddToRegistry(DropdownInner, {
            BackgroundColor3 = 'MainColor';
            BorderColor3 = 'OutlineColor';
        });

        Library:Create('UIGradient', {
            Color = ColorSequence.new({
                ColorSequenceKeypoint.new(0, Color3.new(1, 1, 1)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(212, 212, 212))
            });
            Rotation = 90;
            Parent = DropdownInner;
        });

        local DropdownArrow = Library:Create('ImageLabel', {
            AnchorPoint = Vector2.new(0, 0.5);
            BackgroundTransparency = 1;
            Position = UDim2.new(1, -16, 0.5, 0);
            Size = UDim2.new(0, 12, 0, 12);
            Image = 'http://www.roblox.com/asset/?id=6282522798';
            ZIndex = 8;
            Parent = DropdownInner;
        });

        local ItemList = Library:CreateLabel({
            Position = UDim2.new(0, 5, 0, 0);
            Size = UDim2.new(1, -5, 1, 0);
            TextSize = 12;
            Text = '--';
            TextXAlignment = Enum.TextXAlignment.Left;
            TextWrapped = true;
            ZIndex = 7;
            Parent = DropdownInner;
        });

        Library:OnHighlight(DropdownOuter, DropdownOuter,
            { BorderColor3 = 'AccentColor' },
            { BorderColor3 = 'Black' }
        );

        if type(Info.Tooltip) == 'string' then
            Library:AddToolTip(Info.Tooltip, DropdownOuter)
        end

        local MAX_DROPDOWN_ITEMS = 8;

        local ListOuter = Library:Create('Frame', {
            BackgroundColor3 = Color3.new(0, 0, 0);
            BorderColor3 = Color3.new(0, 0, 0);
            ZIndex = 20;
            Visible = false;
            Parent = ScreenGui;
        });

        local function RecalculateListPosition()
            ListOuter.Position = UDim2.fromOffset(DropdownOuter.AbsolutePosition.X, DropdownOuter.AbsolutePosition.Y + DropdownOuter.Size.Y.Offset + 1);
        end;

        local function RecalculateListSize(YSize)
            ListOuter.Size = UDim2.fromOffset(DropdownOuter.AbsoluteSize.X, YSize or (MAX_DROPDOWN_ITEMS * 20 + 2))
        end;

        RecalculateListPosition();
        RecalculateListSize();

        DropdownOuter:GetPropertyChangedSignal('AbsolutePosition'):Connect(RecalculateListPosition);

        local ListInner = Library:Create('Frame', {
            BackgroundColor3 = Library.MainColor;
            BorderColor3 = Library.OutlineColor;
            BorderMode = Enum.BorderMode.Inset;
            BorderSizePixel = 0;
            Size = UDim2.new(1, 0, 1, 0);
            ZIndex = 21;
            Parent = ListOuter;
        });

        Library:AddToRegistry(ListInner, {
            BackgroundColor3 = 'MainColor';
            BorderColor3 = 'OutlineColor';
        });

        local Scrolling = Library:Create('ScrollingFrame', {
            BackgroundTransparency = 1;
            BorderSizePixel = 0;
            CanvasSize = UDim2.new(0, 0, 0, 0);
            Size = UDim2.new(1, 0, 1, 0);
            ZIndex = 21;
            Parent = ListInner;

            TopImage = 'rbxasset://textures/ui/Scroll/scroll-middle.png',
            BottomImage = 'rbxasset://textures/ui/Scroll/scroll-middle.png',

            ScrollBarThickness = 3,
            ScrollBarImageColor3 = Library.AccentColor,
        });

        Library:AddToRegistry(Scrolling, {
            ScrollBarImageColor3 = 'AccentColor'
        })

        Library:Create('UIListLayout', {
            Padding = UDim.new(0, 0);
            FillDirection = Enum.FillDirection.Vertical;
            SortOrder = Enum.SortOrder.LayoutOrder;
            Parent = Scrolling;
        });

        function Dropdown:Display()
            local Values = Dropdown.Values;
            local Str = '';

            if Info.Multi then
                for Idx, Value in next, Values do
                    if Dropdown.Value[Value] then
                        Str = Str .. Value .. ', ';
                    end;
                end;

                Str = Str:sub(1, #Str - 2);
            else
                Str = Dropdown.Value or '';
            end;

            ItemList.Text = (Str == '' and '--' or Str);
        end;

        function Dropdown:GetActiveValues()
            if Info.Multi then
                local T = {};

                for Value, Bool in next, Dropdown.Value do
                    table.insert(T, Value);
                end;

                return T;
            else
                return Dropdown.Value and 1 or 0;
            end;
        end;

        function Dropdown:BuildDropdownList()
            local Values = Dropdown.Values;
            local Buttons = {};

            for _, Element in next, Scrolling:GetChildren() do
                if not Element:IsA('UIListLayout') then
                    Element:Destroy();
                end;
            end;

            local Count = 0;

            for Idx, Value in next, Values do
                local Table = {};

                Count = Count + 1;

                local Button = Library:Create('Frame', {
                    BackgroundColor3 = Library.MainColor;
                    BorderColor3 = Library.OutlineColor;
                    BorderMode = Enum.BorderMode.Middle;
                    Size = UDim2.new(1, -1, 0, 20);
                    ZIndex = 23;
                    Active = true,
                    Parent = Scrolling;
                });

                Library:AddToRegistry(Button, {
                    BackgroundColor3 = 'MainColor';
                    BorderColor3 = 'OutlineColor';
                });

                local ButtonLabel = Library:CreateLabel({
                    Active = false;
                    Size = UDim2.new(1, -6, 1, 0);
                    Position = UDim2.new(0, 6, 0, 0);
                    TextSize = 12;
                    Text = Value;
                    TextXAlignment = Enum.TextXAlignment.Left;
                    ZIndex = 25;
                    Parent = Button;
                });

                Library:OnHighlight(Button, Button,
                    { BorderColor3 = 'AccentColor', ZIndex = 24 },
                    { BorderColor3 = 'OutlineColor', ZIndex = 23 }
                );

                local Selected;

                if Info.Multi then
                    Selected = Dropdown.Value[Value];
                else
                    Selected = Dropdown.Value == Value;
                end;

                function Table:UpdateButton()
                    if Info.Multi then
                        Selected = Dropdown.Value[Value];
                    else
                        Selected = Dropdown.Value == Value;
                    end;

                    ButtonLabel.TextColor3 = Selected and Library.AccentColor or Library.FontColor;
                    Library.RegistryMap[ButtonLabel].Properties.TextColor3 = Selected and 'AccentColor' or 'FontColor';
                end;

                ButtonLabel.InputBegan:Connect(function(Input)
                    if Input.UserInputType == Enum.UserInputType.MouseButton1 then
                        local Try = not Selected;

                        if Dropdown:GetActiveValues() == 1 and (not Try) and (not Info.AllowNull) then
                        else
                            if Info.Multi then
                                Selected = Try;

                                if Selected then
                                    Dropdown.Value[Value] = true;
                                else
                                    Dropdown.Value[Value] = nil;
                                end;
                            else
                                Selected = Try;

                                if Selected then
                                    Dropdown.Value = Value;
                                else
                                    Dropdown.Value = nil;
                                end;

                                for _, OtherButton in next, Buttons do
                                    OtherButton:UpdateButton();
                                end;
                            end;

                            Table:UpdateButton();
                            Dropdown:Display();

                            Library:SafeCallback(Dropdown.Callback, Dropdown.Value);
                            Library:SafeCallback(Dropdown.Changed, Dropdown.Value);

                            Library:AttemptSave();
                        end;
                    end;
                end);

                Table:UpdateButton();
                Dropdown:Display();

                Buttons[Button] = Table;
            end;

            Scrolling.CanvasSize = UDim2.fromOffset(0, (Count * 20) + 1);

            local Y = math.clamp(Count * 20, 0, MAX_DROPDOWN_ITEMS * 20) + 1;
            RecalculateListSize(Y);
        end;

        function Dropdown:SetValues(NewValues)
            if NewValues then
                Dropdown.Values = NewValues;
            end;

            Dropdown:BuildDropdownList();
        end;

        function Dropdown:OpenDropdown()
            ListOuter.Visible = true;
            Library.OpenedFrames[ListOuter] = true;
            DropdownArrow.Rotation = 180;
        end;

        function Dropdown:CloseDropdown()
            ListOuter.Visible = false;
            Library.OpenedFrames[ListOuter] = nil;
            DropdownArrow.Rotation = 0;
        end;

        function Dropdown:OnChanged(Func)
            Dropdown.Changed = Func;
            Func(Dropdown.Value);
        end;

        function Dropdown:SetValue(Val)
            if Dropdown.Multi then
                local nTable = {};

                for Value, Bool in next, Val do
                    if table.find(Dropdown.Values, Value) then
                        nTable[Value] = true
                    end;
                end;

                Dropdown.Value = nTable;
            else
                if (not Val) then
                    Dropdown.Value = nil;
                elseif table.find(Dropdown.Values, Val) then
                    Dropdown.Value = Val;
                end;
            end;

            Dropdown:BuildDropdownList();

            Library:SafeCallback(Dropdown.Callback, Dropdown.Value);
            Library:SafeCallback(Dropdown.Changed, Dropdown.Value);
        end;

        DropdownOuter.InputBegan:Connect(function(Input)
            if Input.UserInputType == Enum.UserInputType.MouseButton1 and not Library:MouseIsOverOpenedFrame() then
                if ListOuter.Visible then
                    Dropdown:CloseDropdown();
                else
                    Dropdown:OpenDropdown();
                end;
            end;
        end);

        InputService.InputBegan:Connect(function(Input)
            if Input.UserInputType == Enum.UserInputType.MouseButton1 then
                local AbsPos, AbsSize = ListOuter.AbsolutePosition, ListOuter.AbsoluteSize;

                if Mouse.X < AbsPos.X or Mouse.X > AbsPos.X + AbsSize.X
                    or Mouse.Y < (AbsPos.Y - 20 - 1) or Mouse.Y > AbsPos.Y + AbsSize.Y then

                    Dropdown:CloseDropdown();
                end;
            end;
        end);

        Dropdown:BuildDropdownList();
        Dropdown:Display();

        local Defaults = {}

        if type(Info.Default) == 'string' then
            local Idx = table.find(Dropdown.Values, Info.Default)
            if Idx then
                table.insert(Defaults, Idx)
            end
        elseif type(Info.Default) == 'table' then
            for _, Value in next, Info.Default do
                local Idx = table.find(Dropdown.Values, Value)
                if Idx then
                    table.insert(Defaults, Idx)
                end
            end
        elseif type(Info.Default) == 'number' and Dropdown.Values[Info.Default] ~= nil then
            table.insert(Defaults, Info.Default)
        end

        if next(Defaults) then
            for i = 1, #Defaults do
                local Index = Defaults[i]
                if Info.Multi then
                    Dropdown.Value[Dropdown.Values[Index]] = true
                else
                    Dropdown.Value = Dropdown.Values[Index];
                end

                if (not Info.Multi) then break end
            end

            Dropdown:BuildDropdownList();
            Dropdown:Display();
        end

        Groupbox:AddBlank(Info.BlankSize or 5);
        Groupbox:Resize();

        Options[Idx] = Dropdown;

        return Dropdown;
    end;

    function Funcs:AddDependencyBox()
        local Depbox = {
            Dependencies = {};
        };

        local Groupbox = self;
        local Container = Groupbox.Container;

        local Holder = Library:Create('Frame', {
            BackgroundTransparency = 1;
            Size = UDim2.new(1, 0, 0, 0);
            Visible = false;
            Parent = Container;
        });

        local Frame = Library:Create('Frame', {
            BackgroundTransparency = 1;
            Size = UDim2.new(1, 0, 1, 0);
            Visible = true;
            Parent = Holder;
        });

        local Layout = Library:Create('UIListLayout', {
            FillDirection = Enum.FillDirection.Vertical;
            SortOrder = Enum.SortOrder.LayoutOrder;
            Parent = Frame;
        });

        function Depbox:Resize()
            Holder.Size = UDim2.new(1, 0, 0, Layout.AbsoluteContentSize.Y);
            Groupbox:Resize();
        end;

        Layout:GetPropertyChangedSignal('AbsoluteContentSize'):Connect(function()
            Depbox:Resize();
        end);

        Holder:GetPropertyChangedSignal('Visible'):Connect(function()
            Depbox:Resize();
        end);

        function Depbox:Update()
            for _, Dependency in next, Depbox.Dependencies do
                local Elem = Dependency[1];
                local Value = Dependency[2];

                if Elem.Type == 'Toggle' and Elem.Value ~= Value then
                    Holder.Visible = false;
                    Depbox:Resize();
                    return;
                end;
            end;

            Holder.Visible = true;
            Depbox:Resize();
        end;

        function Depbox:SetupDependencies(Dependencies)
            for _, Dependency in next, Dependencies do
                assert(type(Dependency) == 'table', 'SetupDependencies: Dependency is not of type `table`.');
                assert(Dependency[1], 'SetupDependencies: Dependency is missing element argument.');
                assert(Dependency[2] ~= nil, 'SetupDependencies: Dependency is missing value argument.');
            end;

            Depbox.Dependencies = Dependencies;
            Depbox:Update();
        end;

        Depbox.Container = Frame;

        setmetatable(Depbox, BaseGroupbox);

        table.insert(Library.DependencyBoxes, Depbox);

        return Depbox;
    end;

    BaseGroupbox.__index = Funcs;
    BaseGroupbox.__namecall = function(Table, Key, ...)
        return Funcs[Key](...);
    end;
end;

-- < Create other UI elements >
do
    Library.NotificationArea = Library:Create('Frame', {
        BackgroundTransparency = 1;
        Position = UDim2.new(0, 0, 0, 40);
        Size = UDim2.new(0, 300, 0, 200);
        ZIndex = 100;
        Parent = ScreenGui;
    });

    Library:Create('UIListLayout', {
        Padding = UDim.new(0, 4);
        FillDirection = Enum.FillDirection.Vertical;
        SortOrder = Enum.SortOrder.LayoutOrder;
        Parent = Library.NotificationArea;
    });

    local WatermarkOuter = Library:Create('Frame', {
        BorderColor3 = Color3.new(0, 0, 0);
        Position = UDim2.new(0, 100, 0, -25);
        Size = UDim2.new(0, 213, 0, 20);
        ZIndex = 200;
        Visible = false;
        Parent = ScreenGui;
    });

    local WatermarkInner = Library:Create('Frame', {
        BackgroundColor3 = Library.MainColor;
        BorderColor3 = Library.AccentColor;
        BorderMode = Enum.BorderMode.Inset;
        Size = UDim2.new(1, 0, 1, 0);
        ZIndex = 201;
        Parent = WatermarkOuter;
    });

    Library:AddToRegistry(WatermarkInner, {
        BorderColor3 = 'AccentColor';
    });

    local InnerFrame = Library:Create('Frame', {
        BackgroundColor3 = Color3.new(1, 1, 1);
        BorderSizePixel = 0;
        Position = UDim2.new(0, 1, 0, 1);
        Size = UDim2.new(1, -2, 1, -2);
        ZIndex = 202;
        Parent = WatermarkInner;
    });

    local Gradient = Library:Create('UIGradient', {
        Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Library:GetDarkerColor(Library.MainColor)),
            ColorSequenceKeypoint.new(1, Library.MainColor),
        });
        Rotation = -90;
        Parent = InnerFrame;
    });

    Library:AddToRegistry(Gradient, {
        Color = function()
            return ColorSequence.new({
                ColorSequenceKeypoint.new(0, Library:GetDarkerColor(Library.MainColor)),
                ColorSequenceKeypoint.new(1, Library.MainColor),
            });
        end
    });

    local ArchonLabel = Library:Create('ImageLabel', {
        Position = UDim2.new(0, 0, 0, -2);
        BorderSizePixel = 0;
        Size = UDim2.new(0, 20, 0, 20);
        ZIndex = 204;
        Image = getcustomasset('ArchonImage.png');
        Parent = InnerFrame;
        BackgroundTransparency = 1;
        ImageColor3 = Library.AccentColor;
    });

    Library:AddToRegistry(ArchonLabel, {
        ImageColor3 = 'AccentColor';
    });

    local WatermarkLabel = Library:CreateLabel({
        Position = UDim2.new(0, 21, 0, 0);
        Size = UDim2.new(1, -4, 1, 0);
        TextSize = 12;
        TextXAlignment = Enum.TextXAlignment.Left;
        ZIndex = 203;
        Parent = InnerFrame;
        FontFace = Font;
    });

    Library.Watermark = WatermarkOuter;
    Library.WatermarkText = WatermarkLabel;
    Library:MakeDraggable(Library.Watermark);



    local KeybindOuter = Library:Create('Frame', {
        AnchorPoint = Vector2.new(0, 0.5);
        BorderColor3 = Color3.new(0, 0, 0);
        Position = UDim2.new(0, 10, 0.5, 0);
        Size = UDim2.new(0, 210, 0, 20);
        Visible = false;
        ZIndex = 100;
        Parent = ScreenGui;
    });

    local KeybindInner = Library:Create('Frame', {
        BackgroundColor3 = Library.MainColor;
        BorderColor3 = Library.OutlineColor;
        BorderMode = Enum.BorderMode.Inset;
        Size = UDim2.new(1, 0, 1, 0);
        ZIndex = 101;
        Parent = KeybindOuter;
    });

    Library:AddToRegistry(KeybindInner, {
        BackgroundColor3 = 'MainColor';
        BorderColor3 = 'OutlineColor';
    }, true);

    local ColorFrame = Library:Create('Frame', {
        BackgroundColor3 = Library.AccentColor;
        BorderSizePixel = 0;
        Size = UDim2.new(1, 0, 0, 2);
        ZIndex = 102;
        Parent = KeybindInner;
    });

    Library:AddToRegistry(ColorFrame, {
        BackgroundColor3 = 'AccentColor';
    }, true);

    local KeybindLabel = Library:CreateLabel({
        Size = UDim2.new(1, 0, 0, 20);
        Position = UDim2.fromOffset(5, 2),
        TextXAlignment = Enum.TextXAlignment.Left,

        Text = 'Keybinds';
        ZIndex = 104;
        Parent = KeybindInner;
    });

    local KeybindContainer = Library:Create('Frame', {
        BackgroundTransparency = 1;
        Size = UDim2.new(1, 0, 1, -20);
        Position = UDim2.new(0, 0, 0, 20);
        ZIndex = 1;
        Parent = KeybindInner;
    });

    Library:Create('UIListLayout', {
        FillDirection = Enum.FillDirection.Vertical;
        SortOrder = Enum.SortOrder.LayoutOrder;
        Parent = KeybindContainer;
    });

    Library:Create('UIPadding', {
        PaddingLeft = UDim.new(0, 5),
        Parent = KeybindContainer,
    })

    Library.KeybindFrame = KeybindOuter;
    Library.KeybindContainer = KeybindContainer;
    Library:MakeDraggable(KeybindOuter);
end;

function Library:SetWatermarkVisibility(Bool)
    Library.Watermark.Visible = Bool;
end;

function Library:SetWatermark(Text)
    local X, Y = Library:GetTextBounds(Text, Font, 12);
    Library.Watermark.Size = UDim2.new(0, X + 10 + 20, 0, (Y * 1.5) + 3);
    Library:SetWatermarkVisibility(true)

    Library.WatermarkText.Text = Text;
end;

function Library:Notify(Text, Time)
    local XSize, YSize = Library:GetTextBounds(Text, Font, 12);

    YSize = YSize + 7

    local NotifyOuter = Library:Create('Frame', {
        BorderColor3 = Color3.new(0, 0, 0);
        Position = UDim2.new(0, 100, 0, 10);
        Size = UDim2.new(0, 0, 0, YSize);
        ClipsDescendants = true;
        ZIndex = 100;
        Parent = Library.NotificationArea;
    });

    local NotifyInner = Library:Create('Frame', {
        BackgroundColor3 = Library.MainColor;
        BorderColor3 = Library.OutlineColor;
        BorderMode = Enum.BorderMode.Inset;
        Size = UDim2.new(1, 0, 1, 0);
        ZIndex = 101;
        Parent = NotifyOuter;
    });

    Library:AddToRegistry(NotifyInner, {
        BackgroundColor3 = 'MainColor';
        BorderColor3 = 'OutlineColor';
    }, true);

    local InnerFrame = Library:Create('Frame', {
        BackgroundColor3 = Color3.new(1, 1, 1);
        BorderSizePixel = 0;
        Position = UDim2.new(0, 1, 0, 1);
        Size = UDim2.new(1, -2, 1, -2);
        ZIndex = 102;
        Parent = NotifyInner;
    });

    local Gradient = Library:Create('UIGradient', {
        Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Library:GetDarkerColor(Library.MainColor)),
            ColorSequenceKeypoint.new(1, Library.MainColor),
        });
        Rotation = -90;
        Parent = InnerFrame;
    });

    Library:AddToRegistry(Gradient, {
        Color = function()
            return ColorSequence.new({
                ColorSequenceKeypoint.new(0, Library:GetDarkerColor(Library.MainColor)),
                ColorSequenceKeypoint.new(1, Library.MainColor),
            });
        end
    });

    local NotifyLabel = Library:CreateLabel({
        Position = UDim2.new(0, 4, 0, 0);
        Size = UDim2.new(1, -4, 1, 0);
        Text = Text;
        TextXAlignment = Enum.TextXAlignment.Left;
        TextSize = 12;
        ZIndex = 103;
        Parent = InnerFrame;
    });

    local LeftColor = Library:Create('Frame', {
        BackgroundColor3 = Library.AccentColor;
        BorderSizePixel = 0;
        Position = UDim2.new(0, -1, 0, -1);
        Size = UDim2.new(0, 3, 1, 2);
        ZIndex = 104;
        Parent = NotifyOuter;
    });

    Library:AddToRegistry(LeftColor, {
        BackgroundColor3 = 'AccentColor';
    }, true);

    pcall(NotifyOuter.TweenSize, NotifyOuter, UDim2.new(0, XSize + 8 + 4, 0, YSize), 'Out', 'Quad', 0.4, true);

    task.spawn(function()
        task.wait(Time or 5);

        pcall(NotifyOuter.TweenSize, NotifyOuter, UDim2.new(0, 0, 0, YSize), 'Out', 'Quad', 0.4, true);

        task.wait(0.4);

        NotifyOuter:Destroy();
    end);
end;

function Library:CreateWindow(...)
    local Arguments = { ... }
    local Config = { AnchorPoint = Vector2.zero }

    if type(...) == 'table' then
        Config = ...;
    else
        Config.Title = Arguments[1]
        Config.AutoShow = Arguments[2] or false;
    end

    if type(Config.Title) ~= 'string' then Config.Title = 'No title' end
    if type(Config.TabPadding) ~= 'number' then Config.TabPadding = 0 end
    if type(Config.MenuFadeTime) ~= 'number' then Config.MenuFadeTime = 0.2 end

    if typeof(Config.Position) ~= 'UDim2' then Config.Position = UDim2.fromOffset(175, 50) end
    if typeof(Config.Size) ~= 'UDim2' then Config.Size = UDim2.fromOffset(550, 600) end

    if Config.Center then
        Config.AnchorPoint = Vector2.new(0.5, 0.5)
        Config.Position = UDim2.fromScale(0.5, 0.5)
    end

    local Window = {
        Tabs = {};
    };

    local Outer = Library:Create('Frame', {
        AnchorPoint = Config.AnchorPoint,
        BackgroundColor3 = Color3.new(0, 0, 0);
        BorderSizePixel = 0;
        Position = Config.Position,
        Size = Config.Size,
        Visible = false;
        ZIndex = 1;
        Parent = ScreenGui;
    });

    Library:MakeDraggable(Outer, 25);

    local Inner = Library:Create('Frame', {
        BackgroundColor3 = Library.MainColor;
        BorderColor3 = Library.AccentColor;
        BorderMode = Enum.BorderMode.Inset;
        Position = UDim2.new(0, 1, 0, 1);
        Size = UDim2.new(1, -2, 1, -2);
        ZIndex = 1;
        Parent = Outer;
    });

    Library:AddToRegistry(Inner, {
        BackgroundColor3 = 'MainColor';
        BorderColor3 = 'AccentColor';
    });

    local WindowLabel = Library:CreateLabel({
        Position = UDim2.new(0, 4 + 20, 0, 1);
        Size = UDim2.new(0, 0, 0, 25);
        Text = Config.Title or '';
        TextXAlignment = Enum.TextXAlignment.Left;
        ZIndex = 1;
        Parent = Inner;
        FontFace = Font;
    });

    local ArchonLabel = Library:Create('ImageLabel', {
        Position = UDim2.new(0, 4, 0, 2);
        BorderSizePixel = 0;
        Size = UDim2.new(0, 20, 0, 20);
        ZIndex = 2;
        Image = getcustomasset('ArchonImage.png');
        Parent = Inner;
        BackgroundTransparency = 1;
        ImageColor3 = Library.AccentColor;
    });

    Library:AddToRegistry(ArchonLabel, {
        ImageColor3 = 'AccentColor';
    });

    local MainSectionOuter = Library:Create('Frame', {
        BackgroundColor3 = Library.BackgroundColor;
        BorderColor3 = Library.OutlineColor;
        Position = UDim2.new(0, 8, 0, 25);
        Size = UDim2.new(1, -16, 1, -33);
        ZIndex = 1;
        Parent = Inner;
    });

    Library:AddToRegistry(MainSectionOuter, {
        BackgroundColor3 = 'BackgroundColor';
        BorderColor3 = 'OutlineColor';
    });

    local MainSectionInner = Library:Create('Frame', {
        BackgroundColor3 = Library.BackgroundColor;
        BorderColor3 = Color3.new(0, 0, 0);
        BorderMode = Enum.BorderMode.Inset;
        Position = UDim2.new(0, 0, 0, 0);
        Size = UDim2.new(1, 0, 1, 0);
        ZIndex = 1;
        Parent = MainSectionOuter;
    });

    Library:AddToRegistry(MainSectionInner, {
        BackgroundColor3 = 'BackgroundColor';
    });

    local TabArea = Library:Create('Frame', {
        BackgroundTransparency = 1;
        Position = UDim2.new(0, 8, 0, 8);
        Size = UDim2.new(1, -16, 0, 21);
        ZIndex = 1;
        Parent = MainSectionInner;
    });

    local TabListLayout: UIListLayout = Library:Create('UIListLayout', {
        Padding = UDim.new(0, Config.TabPadding);
        FillDirection = Enum.FillDirection.Horizontal;
        SortOrder = Enum.SortOrder.LayoutOrder;
        Parent = TabArea;
    });

    --TabListLayout.HorizontalFlex = Enum.UIFlexAlignment.Fill;

    local TabContainer = Library:Create('Frame', {
        BackgroundColor3 = Library.MainColor;
        BorderColor3 = Library.OutlineColor;
        Position = UDim2.new(0, 8, 0, 30);
        Size = UDim2.new(1, -16, 1, -38);
        ZIndex = 2;
        Parent = MainSectionInner;
    });


    Library:AddToRegistry(TabContainer, {
        BackgroundColor3 = 'MainColor';
        BorderColor3 = 'OutlineColor';
    });

    function Window:SetWindowTitle(Title)
        WindowLabel.Text = Title;
    end;

    function Window:AddTab(Name)
        local Tab = {
            Groupboxes = {};
            Tabboxes = {};
        };

        local TabButtonWidth = Library:GetTextBounds(Name, Font, 12);

        local TabButton = Library:Create('Frame', {
            BackgroundColor3 = Library.BackgroundColor;
            BorderColor3 = Library.OutlineColor;
            Size = UDim2.new(0, TabButtonWidth + 12, 1, 0);
            ZIndex = 1;
            Parent = TabArea;
        });

        Library:AddToRegistry(TabButton, {
            BackgroundColor3 = 'BackgroundColor';
            BorderColor3 = 'OutlineColor';
        });

        local TabButtonLabel = Library:CreateLabel({
            Position = UDim2.new(0, 0, 0, 0);
            Size = UDim2.new(1, 0, 1, -1);
            Text = Name;
            ZIndex = 1;
            Parent = TabButton;
            FontFace = Font;
        });

        local Blocker = Library:Create('Frame', {
            BackgroundColor3 = Library.MainColor;
            BorderSizePixel = 0;
            Position = UDim2.new(0, 0, 1, 0);
            Size = UDim2.new(1, 0, 0, 1);
            BackgroundTransparency = 1;
            ZIndex = 3;
            Parent = TabButton;
        });

        Library:AddToRegistry(Blocker, {
            BackgroundColor3 = 'MainColor';
        });

        local TabFrame = Library:Create('Frame', {
            Name = 'TabFrame',
            BackgroundTransparency = 1;
            Position = UDim2.new(0, 0, 0, 0);
            Size = UDim2.new(1, 0, 1, 0);
            Visible = false;
            ZIndex = 2;
            Parent = TabContainer;
        });

        local LeftSide = Library:Create('ScrollingFrame', {
            BackgroundTransparency = 1;
            BorderSizePixel = 0;
            Position = UDim2.new(0, 8 - 1, 0, 8 - 1);
            Size = UDim2.new(0.5, -12 + 2, 0, 507 + 2);
            CanvasSize = UDim2.new(0, 0, 0, 0);
            BottomImage = '';
            TopImage = '';
            ScrollBarThickness = 0;
            ZIndex = 2;
            Parent = TabFrame;
        });

        local RightSide = Library:Create('ScrollingFrame', {
            BackgroundTransparency = 1;
            BorderSizePixel = 0;
            Position = UDim2.new(0.5, 4 + 1, 0, 8 - 1);
            Size = UDim2.new(0.5, -12 + 2, 0, 507 + 2);
            CanvasSize = UDim2.new(0, 0, 0, 0);
            BottomImage = '';
            TopImage = '';
            ScrollBarThickness = 0;
            ZIndex = 2;
            Parent = TabFrame;
        });

        Library:Create('UIListLayout', {
            Padding = UDim.new(0, 8);
            FillDirection = Enum.FillDirection.Vertical;
            SortOrder = Enum.SortOrder.LayoutOrder;
            HorizontalAlignment = Enum.HorizontalAlignment.Center;
            Parent = LeftSide;
        });

        Library:Create('UIListLayout', {
            Padding = UDim.new(0, 8);
            FillDirection = Enum.FillDirection.Vertical;
            SortOrder = Enum.SortOrder.LayoutOrder;
            HorizontalAlignment = Enum.HorizontalAlignment.Center;
            Parent = RightSide;
        });

        for _, Side in next, { LeftSide, RightSide } do
            Side:WaitForChild('UIListLayout'):GetPropertyChangedSignal('AbsoluteContentSize'):Connect(function()
                Side.CanvasSize = UDim2.fromOffset(0, Side.UIListLayout.AbsoluteContentSize.Y);
            end);
        end;

        function Tab:ShowTab()
            for _, Tab in next, Window.Tabs do
                Tab:HideTab();
            end;

            Blocker.BackgroundTransparency = 0;
            TabButton.BackgroundColor3 = Library.MainColor;
            Library.RegistryMap[TabButton].Properties.BackgroundColor3 = 'MainColor';
            TabFrame.Visible = true;
        end;

        function Tab:HideTab()
            Blocker.BackgroundTransparency = 1;
            TabButton.BackgroundColor3 = Library.BackgroundColor;
            Library.RegistryMap[TabButton].Properties.BackgroundColor3 = 'BackgroundColor';
            TabFrame.Visible = false;
        end;

        function Tab:SetLayoutOrder(Position)
            TabButton.LayoutOrder = Position;
            TabListLayout:ApplyLayout();
        end;

        function Tab:AddGroupbox(Info)
            local Groupbox = {};

            local BoxOuter = Library:Create('Frame', {
                BackgroundColor3 = Library.BackgroundColor;
                BorderColor3 = Library.OutlineColor;
                BorderMode = Enum.BorderMode.Inset;
                Size = UDim2.new(1, 0, 0, 507 + 2);
                ZIndex = 2;
                Parent = Info.Side == 1 and LeftSide or RightSide;
            });

            Library:AddToRegistry(BoxOuter, {
                BackgroundColor3 = 'BackgroundColor';
                BorderColor3 = 'OutlineColor';
            });

            local BoxInner = Library:Create('Frame', {
                BackgroundColor3 = Library.BackgroundColor;
                BorderColor3 = Color3.new(0, 0, 0);
                -- BorderMode = Enum.BorderMode.Inset;
                Size = UDim2.new(1, -2, 1, -2);
                Position = UDim2.new(0, 1, 0, 1);
                ZIndex = 4;
                Parent = BoxOuter;
            });

            Library:AddToRegistry(BoxInner, {
                BackgroundColor3 = 'BackgroundColor';
            });

            local Highlight = Library:Create('Frame', {
                BackgroundColor3 = Library.AccentColor;
                BorderSizePixel = 0;
                Size = UDim2.new(1, 0, 0, 2);
                ZIndex = 5;
                Parent = BoxInner;
            });

            Library:AddToRegistry(Highlight, {
                BackgroundColor3 = 'AccentColor';
            });

            local GroupboxLabel = Library:CreateLabel({
                Size = UDim2.new(1, 0, 0, 18);
                Position = UDim2.new(0, 4, 0, 2);
                TextSize = 12;
                Text = Info.Name;
                TextXAlignment = Enum.TextXAlignment.Left;
                ZIndex = 5;
                Parent = BoxInner;
            });

            local Container = Library:Create('Frame', {
                BackgroundTransparency = 1;
                Position = UDim2.new(0, 4, 0, 20);
                Size = UDim2.new(1, -4, 1, -20);
                ZIndex = 1;
                Parent = BoxInner;
            });

            Library:Create('UIListLayout', {
                FillDirection = Enum.FillDirection.Vertical;
                SortOrder = Enum.SortOrder.LayoutOrder;
                Parent = Container;
            });

            function Groupbox:Resize()
                local Size = 0;

                for _, Element in next, Groupbox.Container:GetChildren() do
                    if (not Element:IsA('UIListLayout')) and Element.Visible then
                        Size = Size + Element.Size.Y.Offset;
                    end;
                end;

                BoxOuter.Size = UDim2.new(1, 0, 0, 20 + Size + 2 + 2);
            end;

            Groupbox.Container = Container;
            setmetatable(Groupbox, BaseGroupbox);

            Groupbox:AddBlank(3);
            Groupbox:Resize();

            Tab.Groupboxes[Info.Name] = Groupbox;

            return Groupbox;
        end;

        function Tab:AddLeftGroupbox(Name)
            return Tab:AddGroupbox({ Side = 1; Name = Name; });
        end;

        function Tab:AddRightGroupbox(Name)
            return Tab:AddGroupbox({ Side = 2; Name = Name; });
        end;

        function Tab:AddTabbox(Info)
            local Tabbox = {
                Tabs = {};
            };

            local BoxOuter = Library:Create('Frame', {
                BackgroundColor3 = Library.BackgroundColor;
                BorderColor3 = Library.OutlineColor;
                BorderMode = Enum.BorderMode.Inset;
                Size = UDim2.new(1, 0, 0, 0);
                ZIndex = 2;
                Parent = Info.Side == 1 and LeftSide or RightSide;
            });

            Library:AddToRegistry(BoxOuter, {
                BackgroundColor3 = 'BackgroundColor';
                BorderColor3 = 'OutlineColor';
            });

            local BoxInner = Library:Create('Frame', {
                BackgroundColor3 = Library.BackgroundColor;
                BorderColor3 = Color3.new(0, 0, 0);
                -- BorderMode = Enum.BorderMode.Inset;
                Size = UDim2.new(1, -2, 1, -2);
                Position = UDim2.new(0, 1, 0, 1);
                ZIndex = 4;
                Parent = BoxOuter;
            });

            Library:AddToRegistry(BoxInner, {
                BackgroundColor3 = 'BackgroundColor';
            });

            local Highlight = Library:Create('Frame', {
                BackgroundColor3 = Library.AccentColor;
                BorderSizePixel = 0;
                Size = UDim2.new(1, 0, 0, 2);
                ZIndex = 10;
                Parent = BoxInner;
            });

            Library:AddToRegistry(Highlight, {
                BackgroundColor3 = 'AccentColor';
            });

            local TabboxButtons = Library:Create('Frame', {
                BackgroundTransparency = 1;
                Position = UDim2.new(0, 0, 0, 1);
                Size = UDim2.new(1, 0, 0, 18);
                ZIndex = 5;
                Parent = BoxInner;
            });

            Library:Create('UIListLayout', {
                FillDirection = Enum.FillDirection.Horizontal;
                HorizontalAlignment = Enum.HorizontalAlignment.Left;
                SortOrder = Enum.SortOrder.LayoutOrder;
                Parent = TabboxButtons;
            });

            function Tabbox:AddTab(Name)
                local Tab = {};

                local Button = Library:Create('Frame', {
                    BackgroundColor3 = Library.MainColor;
                    BorderColor3 = Color3.new(0, 0, 0);
                    Size = UDim2.new(0.5, 0, 1, 0);
                    ZIndex = 6;
                    Parent = TabboxButtons;
                });

                Library:AddToRegistry(Button, {
                    BackgroundColor3 = 'MainColor';
                });

                local ButtonLabel = Library:CreateLabel({
                    Size = UDim2.new(1, 0, 1, 0);
                    TextSize = 12;
                    Text = Name;
                    TextXAlignment = Enum.TextXAlignment.Center;
                    ZIndex = 7;
                    Parent = Button;
                });

                local Block = Library:Create('Frame', {
                    BackgroundColor3 = Library.BackgroundColor;
                    BorderSizePixel = 0;
                    Position = UDim2.new(0, 0, 1, 0);
                    Size = UDim2.new(1, 0, 0, 1);
                    Visible = false;
                    ZIndex = 9;
                    Parent = Button;
                });

                Library:AddToRegistry(Block, {
                    BackgroundColor3 = 'BackgroundColor';
                });

                local Container = Library:Create('Frame', {
                    BackgroundTransparency = 1;
                    Position = UDim2.new(0, 4, 0, 20);
                    Size = UDim2.new(1, -4, 1, -20);
                    ZIndex = 1;
                    Visible = false;
                    Parent = BoxInner;
                });

                Library:Create('UIListLayout', {
                    FillDirection = Enum.FillDirection.Vertical;
                    SortOrder = Enum.SortOrder.LayoutOrder;
                    Parent = Container;
                });

                function Tab:Show()
                    for _, Tab in next, Tabbox.Tabs do
                        Tab:Hide();
                    end;

                    Container.Visible = true;
                    Block.Visible = true;

                    Button.BackgroundColor3 = Library.BackgroundColor;
                    Library.RegistryMap[Button].Properties.BackgroundColor3 = 'BackgroundColor';

                    Tab:Resize();
                end;

                function Tab:Hide()
                    Container.Visible = false;
                    Block.Visible = false;

                    Button.BackgroundColor3 = Library.MainColor;
                    Library.RegistryMap[Button].Properties.BackgroundColor3 = 'MainColor';
                end;

                function Tab:Resize()
                    local TabCount = 0;

                    for _, Tab in next, Tabbox.Tabs do
                        TabCount = TabCount + 1;
                    end;

                    for _, Button in next, TabboxButtons:GetChildren() do
                        if not Button:IsA('UIListLayout') then
                            Button.Size = UDim2.new(1 / TabCount, 0, 1, 0);
                        end;
                    end;

                    if (not Container.Visible) then
                        return;
                    end;

                    local Size = 0;

                    for _, Element in next, Tab.Container:GetChildren() do
                        if (not Element:IsA('UIListLayout')) and Element.Visible then
                            Size = Size + Element.Size.Y.Offset;
                        end;
                    end;

                    BoxOuter.Size = UDim2.new(1, 0, 0, 20 + Size + 2 + 2);
                end;

                Button.InputBegan:Connect(function(Input)
                    if Input.UserInputType == Enum.UserInputType.MouseButton1 and not Library:MouseIsOverOpenedFrame() then
                        Tab:Show();
                        Tab:Resize();
                    end;
                end);

                Tab.Container = Container;
                Tabbox.Tabs[Name] = Tab;

                setmetatable(Tab, BaseGroupbox);

                Tab:AddBlank(3);
                Tab:Resize();

                -- Show first tab (number is 2 cus of the UIListLayout that also sits in that instance)
                if #TabboxButtons:GetChildren() == 2 then
                    Tab:Show();
                end;

                return Tab;
            end;

            Tab.Tabboxes[Info.Name or ''] = Tabbox;

            return Tabbox;
        end;

        function Tab:AddLeftTabbox(Name)
            return Tab:AddTabbox({ Name = Name, Side = 1; });
        end;

        function Tab:AddRightTabbox(Name)
            return Tab:AddTabbox({ Name = Name, Side = 2; });
        end;

        TabButton.InputBegan:Connect(function(Input)
            if Input.UserInputType == Enum.UserInputType.MouseButton1 then
                Tab:ShowTab();
            end;
        end);

        -- This was the first tab added, so we show it by default.
        if #TabContainer:GetChildren() == 1 then
            Tab:ShowTab();
        end;

        Window.Tabs[Name] = Tab;
        return Tab;
    end;

    local ModalElement = Library:Create('TextButton', {
        BackgroundTransparency = 1;
        Size = UDim2.new(0, 0, 0, 0);
        Visible = true;
        Text = '';
        Modal = false;
        Parent = ScreenGui;
    });

    local TransparencyCache = {};
    local Toggled = false;
    local Fading = false;

    function Library:Toggle()
        if Fading then
            return;
        end;

        local FadeTime = Config.MenuFadeTime;
        Fading = true;
        Toggled = (not Toggled);
        ModalElement.Modal = Toggled;

        if Toggled then
            -- A bit scuffed, but if we're going from not toggled -> toggled we want to show the frame immediately so that the fade is visible.
            Outer.Visible = true;

            task.spawn(function()
                -- TODO: add cursor fade?
                local State = InputService.MouseIconEnabled;

                local Cursor = Drawing.new('Triangle');
                Cursor.Thickness = 1;
                Cursor.Filled = true;
                Cursor.Visible = true;

                local CursorOutline = Drawing.new('Triangle');
                CursorOutline.Thickness = 1;
                CursorOutline.Filled = false;
                CursorOutline.Color = Color3.new(0, 0, 0);
                CursorOutline.Visible = true;

                while Toggled and ScreenGui.Parent do
                    InputService.MouseIconEnabled = false;

                    local mPos = InputService:GetMouseLocation();

                    Cursor.Color = Library.AccentColor;

                    Cursor.PointA = Vector2.new(mPos.X, mPos.Y);
                    Cursor.PointB = Vector2.new(mPos.X + 16, mPos.Y + 6);
                    Cursor.PointC = Vector2.new(mPos.X + 6, mPos.Y + 16);

                    CursorOutline.PointA = Cursor.PointA;
                    CursorOutline.PointB = Cursor.PointB;
                    CursorOutline.PointC = Cursor.PointC;

                    RenderStepped:Wait();
                end;

                InputService.MouseIconEnabled = State;

                Cursor:Remove();
                CursorOutline:Remove();
            end);
        end;

        for _, Desc in next, Outer:GetDescendants() do
            local Properties = {};

            if Desc:IsA('ImageLabel') then
                table.insert(Properties, 'ImageTransparency');
                table.insert(Properties, 'BackgroundTransparency');
            elseif Desc:IsA('TextLabel') or Desc:IsA('TextBox') then
                table.insert(Properties, 'TextTransparency');
            elseif Desc:IsA('Frame') or Desc:IsA('ScrollingFrame') then
                table.insert(Properties, 'BackgroundTransparency');
            elseif Desc:IsA('UIStroke') then
                table.insert(Properties, 'Transparency');
            end;

            local Cache = TransparencyCache[Desc];

            if (not Cache) then
                Cache = {};
                TransparencyCache[Desc] = Cache;
            end;

            for _, Prop in next, Properties do
                if not Cache[Prop] then
                    Cache[Prop] = Desc[Prop];
                end;

                if Cache[Prop] == 1 then
                    continue;
                end;

                TweenService:Create(Desc, TweenInfo.new(FadeTime, Enum.EasingStyle.Linear), { [Prop] = Toggled and Cache[Prop] or 1 }):Play();
            end;
        end;

        task.wait(FadeTime);

        Outer.Visible = Toggled;

        Fading = false;
    end

    Library:GiveSignal(InputService.InputBegan:Connect(function(Input, Processed)
        if type(Library.ToggleKeybind) == 'table' and Library.ToggleKeybind.Type == 'KeyPicker' then
            if Input.UserInputType == Enum.UserInputType.Keyboard and Input.KeyCode.Name == Library.ToggleKeybind.Value then
                task.spawn(Library.Toggle)
            end
        elseif Input.KeyCode == Enum.KeyCode.RightControl or (Input.KeyCode == Enum.KeyCode.RightShift and (not Processed)) then
            task.spawn(Library.Toggle)
        end
    end))

    if Config.AutoShow then task.spawn(Library.Toggle) end

    Window.Holder = Outer;

    return Window;
end;

local function OnPlayerChange()
    local PlayerList = GetPlayersString();

    for _, Value in next, Options do
        if Value.Type == 'Dropdown' and Value.SpecialType == 'Player' then
            Value:SetValues(PlayerList);
        end;
    end;
end;

Players.PlayerAdded:Connect(OnPlayerChange);
Players.PlayerRemoving:Connect(OnPlayerChange);

getgenv().Library = Library

return Library;
